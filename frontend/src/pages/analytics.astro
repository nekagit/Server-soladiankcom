---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import AuthGuard from '../components/AuthGuard.astro';
import Card from '../components/atoms/Card.astro';
---

<Layout title='Analytics Dashboard - Soladia'>
  <Navigation />

  <AuthGuard requireAuth={true} requireRole='admin' redirectTo='/auth'>
    <main class='min-h-screen bg-gray-50 py-8'>
      <div class='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>
        <!-- Header -->
        <div class='mb-8'>
          <h1 class='text-3xl font-bold text-gray-900'>Analytics Dashboard</h1>
          <p class='mt-2 text-gray-600'>
            Comprehensive insights into your Soladia marketplace performance
          </p>
        </div>

        <!-- Key Metrics -->
        <div class='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8'>
          <Card variant='elevated' padding='lg'>
            <div class='flex items-center justify-between'>
              <div>
                <p class='text-sm font-medium text-gray-500'>Total Revenue</p>
                <p id='total-revenue' class='text-3xl font-bold text-gray-900'>
                  $0
                </p>
                <p id='revenue-growth' class='text-sm text-green-600'>+0%</p>
              </div>
              <div
                class='w-12 h-12 bg-green-100 rounded-full flex items-center justify-center'
              >
                <svg
                  class='w-6 h-6 text-green-600'
                  fill='none'
                  stroke='currentColor'
                  viewBox='0 0 24 24'
                >
                  <path
                    stroke-linecap='round'
                    stroke-linejoin='round'
                    stroke-width='2'
                    d='M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1'
                  ></path>
                </svg>
              </div>
            </div>
          </Card>

          <Card variant='elevated' padding='lg'>
            <div class='flex items-center justify-between'>
              <div>
                <p class='text-sm font-medium text-gray-500'>Total Sales</p>
                <p id='total-sales' class='text-3xl font-bold text-gray-900'>
                  0
                </p>
                <p id='sales-growth' class='text-sm text-blue-600'>+0%</p>
              </div>
              <div
                class='w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center'
              >
                <svg
                  class='w-6 h-6 text-blue-600'
                  fill='none'
                  stroke='currentColor'
                  viewBox='0 0 24 24'
                >
                  <path
                    stroke-linecap='round'
                    stroke-linejoin='round'
                    stroke-width='2'
                    d='M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z'></path>
                </svg>
              </div>
            </div>
          </Card>

          <Card variant='elevated' padding='lg'>
            <div class='flex items-center justify-between'>
              <div>
                <p class='text-sm font-medium text-gray-500'>Active Users</p>
                <p id='active-users' class='text-3xl font-bold text-gray-900'>
                  0
                </p>
                <p id='users-growth' class='text-sm text-purple-600'>+0%</p>
              </div>
              <div
                class='w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center'
              >
                <svg
                  class='w-6 h-6 text-purple-600'
                  fill='none'
                  stroke='currentColor'
                  viewBox='0 0 24 24'
                >
                  <path
                    stroke-linecap='round'
                    stroke-linejoin='round'
                    stroke-width='2'
                    d='M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z'
                  ></path>
                </svg>
              </div>
            </div>
          </Card>

          <Card variant='elevated' padding='lg'>
            <div class='flex items-center justify-between'>
              <div>
                <p class='text-sm font-medium text-gray-500'>Conversion Rate</p>
                <p
                  id='conversion-rate'
                  class='text-3xl font-bold text-gray-900'
                >
                  0%
                </p>
                <p id='conversion-growth' class='text-sm text-orange-600'>
                  +0%
                </p>
              </div>
              <div
                class='w-12 h-12 bg-orange-100 rounded-full flex items-center justify-center'
              >
                <svg
                  class='w-6 h-6 text-orange-600'
                  fill='none'
                  stroke='currentColor'
                  viewBox='0 0 24 24'
                >
                  <path
                    stroke-linecap='round'
                    stroke-linejoin='round'
                    stroke-width='2'
                    d='M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z'
                  ></path>
                </svg>
              </div>
            </div>
          </Card>
        </div>

        <!-- Charts Section -->
        <div class='grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8'>
          <!-- Revenue Chart -->
          <Card variant='default' padding='lg'>
            <div class='flex items-center justify-between mb-6'>
              <h2 class='text-xl font-semibold text-gray-900'>
                Revenue Trends
              </h2>
              <div class='flex space-x-2'>
                <button
                  class='px-3 py-1 text-sm bg-soladia-primary text-white rounded-md'
                  >30D</button
                >
                <button
                  class='px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded-md'
                  >90D</button
                >
                <button
                  class='px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded-md'
                  >1Y</button
                >
              </div>
            </div>
            <div
              id='revenue-chart'
              class='h-64 flex items-center justify-center bg-gray-50 rounded-lg'
            >
              <div class='text-center'>
                <svg
                  class='w-12 h-12 text-gray-400 mx-auto mb-2'
                  fill='none'
                  stroke='currentColor'
                  viewBox='0 0 24 24'
                >
                  <path
                    stroke-linecap='round'
                    stroke-linejoin='round'
                    stroke-width='2'
                    d='M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z'
                  ></path>
                </svg>
                <p class='text-sm text-gray-500'>
                  Revenue chart will load here
                </p>
              </div>
            </div>
          </Card>

          <!-- User Growth Chart -->
          <Card variant='default' padding='lg'>
            <div class='flex items-center justify-between mb-6'>
              <h2 class='text-xl font-semibold text-gray-900'>User Growth</h2>
              <div class='flex space-x-2'>
                <button
                  class='px-3 py-1 text-sm bg-soladia-primary text-white rounded-md'
                  >30D</button
                >
                <button
                  class='px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded-md'
                  >90D</button
                >
                <button
                  class='px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded-md'
                  >1Y</button
                >
              </div>
            </div>
            <div
              id='user-growth-chart'
              class='h-64 flex items-center justify-center bg-gray-50 rounded-lg'
            >
              <div class='text-center'>
                <svg
                  class='w-12 h-12 text-gray-400 mx-auto mb-2'
                  fill='none'
                  stroke='currentColor'
                  viewBox='0 0 24 24'
                >
                  <path
                    stroke-linecap='round'
                    stroke-linejoin='round'
                    stroke-width='2'
                    d='M13 7h8m0 0v8m0-8l-8 8m8-8l-8 8'></path>
                </svg>
                <p class='text-sm text-gray-500'>
                  User growth chart will load here
                </p>
              </div>
            </div>
          </Card>
        </div>

        <!-- Top Products and Sellers -->
        <div class='grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8'>
          <!-- Top Products -->
          <Card variant='default' padding='lg'>
            <h2 class='text-xl font-semibold text-gray-900 mb-6'>
              Top Products
            </h2>
            <div id='top-products' class='space-y-4'>
              <!-- Top products will be populated here -->
            </div>
          </Card>

          <!-- Top Sellers -->
          <Card variant='default' padding='lg'>
            <h2 class='text-xl font-semibold text-gray-900 mb-6'>
              Top Sellers
            </h2>
            <div id='top-sellers' class='space-y-4'>
              <!-- Top sellers will be populated here -->
            </div>
          </Card>
        </div>

        <!-- Geographic and Device Data -->
        <div class='grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8'>
          <!-- Geographic Distribution -->
          <Card variant='default' padding='lg'>
            <h2 class='text-xl font-semibold text-gray-900 mb-6'>
              Geographic Distribution
            </h2>
            <div id='geographic-data' class='space-y-3'>
              <!-- Geographic data will be populated here -->
            </div>
          </Card>

          <!-- Device Analytics -->
          <Card variant='default' padding='lg'>
            <h2 class='text-xl font-semibold text-gray-900 mb-6'>
              Device Analytics
            </h2>
            <div id='device-data' class='space-y-4'>
              <!-- Device data will be populated here -->
            </div>
          </Card>
        </div>

        <!-- Real-time Events -->
        <Card variant='default' padding='lg'>
          <div class='flex items-center justify-between mb-6'>
            <h2 class='text-xl font-semibold text-gray-900'>
              Real-time Events
            </h2>
            <button
              id='refresh-events'
              class='px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200'
            >
              Refresh
            </button>
          </div>
          <div id='events-list' class='space-y-2 max-h-64 overflow-y-auto'>
            <!-- Events will be populated here -->
          </div>
        </Card>
      </div>
    </main>
  </AuthGuard>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const analyticsService = (window as any).analyticsService;
    if (!analyticsService) {
      console.error('Analytics service not available');
      return;
    }

    // Load all analytics data
    loadDashboardData();
    loadCharts();
    loadTopProducts();
    loadTopSellers();
    loadGeographicData();
    loadDeviceData();
    loadEvents();

    // Set up refresh intervals
    setInterval(loadEvents, 30000); // Refresh events every 30 seconds
    setInterval(loadDashboardData, 60000); // Refresh dashboard data every minute

    async function loadDashboardData() {
      try {
        const data = await analyticsService.getDashboardData();
        updateMetrics(data);
      } catch (error) {
        console.error('Failed to load dashboard data:', error);
      }
    }

    function updateMetrics(data: any) {
      // Update revenue metrics
      const totalRevenue = document.getElementById('total-revenue');
      const revenueGrowth = document.getElementById('revenue-growth');
      if (totalRevenue)
        totalRevenue.textContent = `$${data.revenue.total.toLocaleString()}`;
      if (revenueGrowth) {
        revenueGrowth.textContent = `+${data.revenue.growth}%`;
        revenueGrowth.className = `text-sm ${data.revenue.growth >= 0 ? 'text-green-600' : 'text-red-600'}`;
      }

      // Update sales metrics
      const totalSales = document.getElementById('total-sales');
      const salesGrowth = document.getElementById('sales-growth');
      if (totalSales)
        totalSales.textContent = data.sales.total.toLocaleString();
      if (salesGrowth) {
        salesGrowth.textContent = `+${data.sales.growth}%`;
        salesGrowth.className = `text-sm ${data.sales.growth >= 0 ? 'text-green-600' : 'text-red-600'}`;
      }

      // Update user metrics
      const activeUsers = document.getElementById('active-users');
      const usersGrowth = document.getElementById('users-growth');
      if (activeUsers)
        activeUsers.textContent = data.users.active.toLocaleString();
      if (usersGrowth) {
        usersGrowth.textContent = `+${data.users.growth}%`;
        usersGrowth.className = `text-sm ${data.users.growth >= 0 ? 'text-green-600' : 'text-red-600'}`;
      }

      // Update conversion metrics
      const conversionRate = document.getElementById('conversion-rate');
      const conversionGrowth = document.getElementById('conversion-growth');
      if (conversionRate)
        conversionRate.textContent = `${data.conversion.rate}%`;
      if (conversionGrowth) {
        conversionGrowth.textContent = `+${data.conversion.growth}%`;
        conversionGrowth.className = `text-sm ${data.conversion.growth >= 0 ? 'text-green-600' : 'text-red-600'}`;
      }
    }

    async function loadCharts() {
      try {
        const revenueChart = await analyticsService.getRevenueChart(30);
        const userGrowthChart = await analyticsService.getUserGrowthChart(30);

        // In a real implementation, you would use a charting library like Chart.js
        console.log('Revenue Chart Data:', revenueChart);
        console.log('User Growth Chart Data:', userGrowthChart);

        // For now, show placeholder text
        const revenueChartContainer = document.getElementById('revenue-chart');
        const userGrowthChartContainer =
          document.getElementById('user-growth-chart');

        if (revenueChartContainer) {
          revenueChartContainer.innerHTML = `
            <div class='text-center'>
              <p class='text-sm text-gray-500'>Revenue chart with ${revenueChart.datasets[0].data.length} data points</p>
              <p class='text-xs text-gray-400 mt-1'>Chart.js integration needed</p>
            </div>
          `;
        }

        if (userGrowthChartContainer) {
          userGrowthChartContainer.innerHTML = `
            <div class='text-center'>
              <p class='text-sm text-gray-500'>User growth chart with ${userGrowthChart.datasets[0].data.length} data points</p>
              <p class='text-xs text-gray-400 mt-1'>Chart.js integration needed</p>
            </div>
          `;
        }
      } catch (error) {
        console.error('Failed to load charts:', error);
      }
    }

    async function loadTopProducts() {
      try {
        const products = await analyticsService.getTopProducts(5);
        const container = document.getElementById('top-products');
        if (!container) return;

        container.innerHTML = products
          .map(
            (product, index) => `
          <div class='flex items-center justify-between p-3 bg-gray-50 rounded-lg'>
            <div class='flex items-center space-x-3'>
              <span class='w-6 h-6 bg-soladia-primary text-white rounded-full flex items-center justify-center text-sm font-semibold'>
                ${index + 1}
              </span>
              <div>
                <p class='text-sm font-medium text-gray-900'>${product.name}</p>
                <p class='text-xs text-gray-500'>${product.sales} sales</p>
              </div>
            </div>
            <div class='text-right'>
              <p class='text-sm font-semibold text-gray-900'>$${product.revenue.toLocaleString()}</p>
              <p class='text-xs ${product.growth >= 0 ? 'text-green-600' : 'text-red-600'}'>
                ${product.growth >= 0 ? '+' : ''}${product.growth}%
              </p>
            </div>
          </div>
        `
          )
          .join('');
      } catch (error) {
        console.error('Failed to load top products:', error);
      }
    }

    async function loadTopSellers() {
      try {
        const sellers = await analyticsService.getTopSellers(5);
        const container = document.getElementById('top-sellers');
        if (!container) return;

        container.innerHTML = sellers
          .map(
            (seller, index) => `
          <div class='flex items-center justify-between p-3 bg-gray-50 rounded-lg'>
            <div class='flex items-center space-x-3'>
              <span class='w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-semibold'>
                ${index + 1}
              </span>
              <div>
                <p class='text-sm font-medium text-gray-900'>${seller.name}</p>
                <div class='flex items-center space-x-1'>
                  <div class='flex'>
                    ${Array.from(
                      { length: 5 },
                      (_, i) => `
                      <svg class='w-3 h-3 ${i < Math.floor(seller.rating) ? 'text-yellow-400' : 'text-gray-300'}' fill='currentColor' viewBox='0 0 20 20'>
                        <path d='M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z' />
                      </svg>
                    `
                    ).join('')}
                  </div>
                  <span class='text-xs text-gray-500'>${seller.rating}</span>
                </div>
              </div>
            </div>
            <div class='text-right'>
              <p class='text-sm font-semibold text-gray-900'>$${seller.revenue.toLocaleString()}</p>
              <p class='text-xs text-gray-500'>${seller.sales} sales</p>
            </div>
          </div>
        `
          )
          .join('');
      } catch (error) {
        console.error('Failed to load top sellers:', error);
      }
    }

    async function loadGeographicData() {
      try {
        const data = await analyticsService.getGeographicData();
        const container = document.getElementById('geographic-data');
        if (!container) return;

        container.innerHTML = data
          .map(
            country => `
          <div class='flex items-center justify-between p-2 bg-gray-50 rounded'>
            <span class='text-sm font-medium text-gray-900'>${country.country}</span>
            <div class='flex items-center space-x-4 text-xs text-gray-500'>
              <span>${country.sales} sales</span>
              <span>$${country.revenue.toLocaleString()}</span>
              <span>${country.users} users</span>
            </div>
          </div>
        `
          )
          .join('');
      } catch (error) {
        console.error('Failed to load geographic data:', error);
      }
    }

    async function loadDeviceData() {
      try {
        const data = await analyticsService.getDeviceData();
        const container = document.getElementById('device-data');
        if (!container) return;

        container.innerHTML = data
          .map(
            device => `
          <div class='space-y-2'>
            <div class='flex items-center justify-between'>
              <span class='text-sm font-medium text-gray-900'>${device.device}</span>
              <span class='text-sm text-gray-500'>${device.conversion}% conversion</span>
            </div>
            <div class='flex items-center space-x-4 text-xs text-gray-500'>
              <span>${device.users} users</span>
              <span>${device.sessions} sessions</span>
            </div>
            <div class='w-full bg-gray-200 rounded-full h-2'>
              <div class='bg-soladia-primary h-2 rounded-full' style='width: ${device.conversion * 10}%'></div>
            </div>
          </div>
        `
          )
          .join('');
      } catch (error) {
        console.error('Failed to load device data:', error);
      }
    }

    function loadEvents() {
      try {
        const events = analyticsService.getCachedEvents();
        const container = document.getElementById('events-list');
        if (!container) return;

        const recentEvents = events.slice(-10).reverse();
        container.innerHTML = recentEvents
          .map(
            event => `
          <div class='flex items-center justify-between p-2 bg-gray-50 rounded text-sm'>
            <div class='flex items-center space-x-2'>
              <div class='w-2 h-2 bg-blue-500 rounded-full'></div>
              <span class='font-medium'>${event.name}</span>
              <span class='text-gray-500'>${event.properties.page || ''}</span>
            </div>
            <span class='text-xs text-gray-400'>${new Date(event.timestamp).toLocaleTimeString()}</span>
          </div>
        `
          )
          .join('');
      } catch (error) {
        console.error('Failed to load events:', error);
      }
    }

    // Refresh events button
    document
      .getElementById('refresh-events')
      ?.addEventListener('click', loadEvents);
  });
</script>

<style>
  .analytics-dashboard {
    min-height: 100vh;
  }

  .metric-card {
    transition: transform 0.2s ease-in-out;
  }

  .metric-card:hover {
    transform: translateY(-2px);
  }
</style>
