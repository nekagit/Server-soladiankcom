---
// Dynamic category page
import Layout from '../../layouts/Layout.astro';
import ProductCard from '../../components/ProductCard.astro';
import AdvancedSearchSidebar from '../../components/AdvancedSearchSidebar.astro';
import '../../styles/category-pages.css';

export async function getStaticPaths() {
  const categories = [
    'electronics',
    'digital-art',
    'gaming',
    'music',
    'virtual-world',
    'trading-cards',
    '3d-assets',
    'photography',
    'collectibles',
    'sports',
    'fashion',
    'real-estate',
    'home-garden',
    'automotive',
    'jewelry'
  ];

  return categories.map(category => ({
    params: { category }
  }));
}

const { category } = Astro.params;

// Mock products data for different categories
const categoryProducts = {
  'electronics': [
    {
      id: 1,
      name: "Smartphone NFT",
      price: 15.0,
      image: "https://images.unsplash.com/photo-1592750475338-74b7b21085ab?w=300&h=200&fit=crop&crop=center",
      category: "Electronics",
      seller: "TechSeller",
      description: "Digital representation of latest smartphone",
      nft: true,
      solana: true
    },
    {
      id: 2,
      name: "Laptop NFT",
      price: 25.0,
      image: "https://images.unsplash.com/photo-1592750475338-74b7b21085ab?w=300&h=200&fit=crop&crop=center",
      category: "Electronics",
      seller: "TechSeller",
      description: "High-end laptop as NFT",
      nft: true,
      solana: true
    }
  ],
  'digital-art': [
    {
      id: 3,
      name: "Abstract Art #001",
      price: 2.5,
      image: "https://images.unsplash.com/photo-1592750475338-74b7b21085ab?w=300&h=200&fit=crop&crop=center",
      category: "Digital Art",
      seller: "Artist123",
      description: "Unique abstract digital artwork",
      nft: true,
      solana: true
    },
    {
      id: 4,
      name: "Pixel Art Collection",
      price: 1.8,
      image: "https://images.unsplash.com/photo-1592750475338-74b7b21085ab?w=300&h=200&fit=crop&crop=center",
      category: "Digital Art",
      seller: "PixelArtist",
      description: "Retro pixel art collection",
      nft: true,
      solana: true
    }
  ],
  'gaming': [
    {
      id: 5,
      name: "Legendary Sword",
      price: 8.5,
      image: "https://images.unsplash.com/photo-1592750475338-74b7b21085ab?w=300&h=200&fit=crop&crop=center",
      category: "Gaming",
      seller: "GameMaster",
      description: "Rare legendary sword from RPG",
      nft: true,
      solana: true
    },
    {
      id: 6,
      name: "Character Skin",
      price: 3.2,
      image: "https://images.unsplash.com/photo-1592750475338-74b7b21085ab?w=300&h=200&fit=crop&crop=center",
      category: "Gaming",
      seller: "SkinCreator",
      description: "Exclusive character skin",
      nft: true,
      solana: true
    }
  ],
  'home-garden': [
    {
      id: 7,
      name: "Smart Garden NFT",
      price: 12.5,
      image: "https://images.unsplash.com/photo-1416879595882-3373a0480b5b?w=300&h=200&fit=crop&crop=center",
      category: "Home & Garden",
      seller: "GardenMaster",
      description: "Digital smart garden with automated systems",
      nft: true,
      solana: true
    },
    {
      id: 8,
      name: "Virtual Furniture Set",
      price: 8.0,
      image: "https://images.unsplash.com/photo-1586023492125-27b2c045efd7?w=300&h=200&fit=crop&crop=center",
      category: "Home & Garden",
      seller: "HomeDesigner",
      description: "Premium virtual furniture collection",
      nft: true,
      solana: true
    },
    {
      id: 9,
      name: "Garden Tools NFT",
      price: 5.5,
      image: "https://images.unsplash.com/photo-1416879595882-3373a0480b5b?w=300&h=200&fit=crop&crop=center",
      category: "Home & Garden",
      seller: "ToolExpert",
      description: "Digital garden tools for virtual gardening",
      nft: true,
      solana: true
    }
  ],
  'automotive': [
    {
      id: 10,
      name: "Tesla Model S NFT",
      price: 25.0,
      image: "https://images.unsplash.com/photo-1555215695-3004980ad54e?w=300&h=200&fit=crop&crop=center",
      category: "Automotive",
      seller: "CarCollector",
      description: "Digital Tesla Model S with custom features",
      nft: true,
      solana: true
    },
    {
      id: 11,
      name: "Racing Car Parts",
      price: 15.5,
      image: "https://images.unsplash.com/photo-1555215695-3004980ad54e?w=300&h=200&fit=crop&crop=center",
      category: "Automotive",
      seller: "SpeedDemon",
      description: "High-performance racing car components",
      nft: true,
      solana: true
    },
    {
      id: 12,
      name: "Vintage Car Collection",
      price: 35.0,
      image: "https://images.unsplash.com/photo-1555215695-3004980ad54e?w=300&h=200&fit=crop&crop=center",
      category: "Automotive",
      seller: "ClassicCars",
      description: "Rare vintage car digital collection",
      nft: true,
      solana: true
    }
  ],
  'jewelry': [
    {
      id: 13,
      name: "Diamond Ring NFT",
      price: 45.0,
      image: "https://images.unsplash.com/photo-1515562141207-7a88fb7ce338?w=300&h=200&fit=crop&crop=center",
      category: "Jewelry",
      seller: "DiamondDealer",
      description: "Exclusive digital diamond ring",
      nft: true,
      solana: true
    },
    {
      id: 14,
      name: "Gold Chain Collection",
      price: 18.5,
      image: "https://images.unsplash.com/photo-1515562141207-7a88fb7ce338?w=300&h=200&fit=crop&crop=center",
      category: "Jewelry",
      seller: "GoldMaster",
      description: "Premium digital gold chain collection",
      nft: true,
      solana: true
    },
    {
      id: 15,
      name: "Vintage Watch NFT",
      price: 28.0,
      image: "https://images.unsplash.com/photo-1515562141207-7a88fb7ce338?w=300&h=200&fit=crop&crop=center",
      category: "Jewelry",
      seller: "WatchCollector",
      description: "Rare vintage watch digital replica",
      nft: true,
      solana: true
    }
  ]
};

const products = categoryProducts[category as keyof typeof categoryProducts] || [];

const categoryInfo = {
  'electronics': {
    name: 'Electronics',
    description: 'Digital representations of electronic devices and gadgets',
    icon: 'üì±'
  },
  'digital-art': {
    name: 'Digital Art',
    description: 'Unique digital artworks and creative pieces',
    icon: 'üé®'
  },
  'gaming': {
    name: 'Gaming',
    description: 'Gaming assets, characters, and collectibles',
    icon: 'üéÆ'
  },
  'music': {
    name: 'Music',
    description: 'Music NFTs, albums, and audio experiences',
    icon: 'üéµ'
  },
  'virtual-world': {
    name: 'Virtual World',
    description: 'Virtual land, buildings, and metaverse assets',
    icon: 'üåê'
  },
  'trading-cards': {
    name: 'Trading Cards',
    description: 'Digital trading cards and collectibles',
    icon: 'üÉè'
  },
  '3d-assets': {
    name: '3D Assets',
    description: '3D models, animations, and virtual objects',
    icon: 'üéØ'
  },
  'photography': {
    name: 'Photography',
    description: 'Digital photography and visual art',
    icon: 'üì∏'
  },
  'collectibles': {
    name: 'Collectibles',
    description: 'Rare and unique collectible items',
    icon: 'üíé'
  },
  'sports': {
    name: 'Sports',
    description: 'Sports memorabilia and athlete NFTs',
    icon: '‚öΩ'
  },
  'fashion': {
    name: 'Fashion',
    description: 'Digital fashion items and wearables',
    icon: 'üëó'
  },
  'real-estate': {
    name: 'Real Estate',
    description: 'Virtual real estate and property',
    icon: 'üè†'
  },
  'home-garden': {
    name: 'Home & Garden',
    description: 'Digital home decor, furniture, and garden items',
    icon: 'üè°'
  },
  'automotive': {
    name: 'Automotive',
    description: 'Digital cars, parts, and automotive accessories',
    icon: 'üöó'
  },
  'jewelry': {
    name: 'Jewelry',
    description: 'Digital jewelry, watches, and luxury accessories',
    icon: 'üíç'
  }
};

const info = categoryInfo[category as keyof typeof categoryInfo] || {
  name: 'Category',
  description: 'Explore items in this category',
  icon: 'üì¶'
};
---

<Layout title={`${info.name} - Soladia Marketplace`}>
  <main class="min-h-screen bg-gray-50">
    <!-- Category Header -->
    <div class="category-header">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="category-header-content flex items-center space-x-6">
          <div class="category-icon">{info.icon}</div>
          <div>
            <h1 class="category-title">{info.name}</h1>
            <p class="category-description">{info.description}</p>
          </div>
        </div>
      </div>
    </div>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
        <!-- Sidebar -->
        <div class="lg:col-span-1 category-sidebar">
          <!-- Advanced Search -->
          <div class="sidebar-card">
            <div class="sidebar-card-header">
              <h3 class="sidebar-card-title">Advanced Search</h3>
            </div>
            <div class="sidebar-card-content">
              <AdvancedSearchSidebar />
            </div>
          </div>

          <!-- Category Stats -->
          <div class="sidebar-card mt-6">
            <div class="sidebar-card-header">
              <h3 class="sidebar-card-title">Category Stats</h3>
            </div>
            <div class="sidebar-card-content">
              <div class="stats-grid">
                <div class="stat-item">
                  <span class="stat-label">Total Items</span>
                  <span class="stat-value">{products.length}</span>
                </div>
                <div class="stat-item">
                  <span class="stat-label">Floor Price</span>
                  <span class="stat-value sol">
                    {products.length > 0 ? Math.min(...products.map((p: any) => p.price)).toFixed(2) : '0.00'} SOL
                  </span>
                </div>
                <div class="stat-item">
                  <span class="stat-label">Volume (24h)</span>
                  <span class="stat-value sol">12.5 SOL</span>
                </div>
                <div class="stat-item">
                  <span class="stat-label">Owners</span>
                  <span class="stat-value">45</span>
                </div>
              </div>
            </div>
          </div>

          <!-- Related Categories -->
          <div class="sidebar-card mt-6">
            <div class="sidebar-card-header">
              <h3 class="sidebar-card-title">Related Categories</h3>
            </div>
            <div class="sidebar-card-content">
              <div class="related-categories">
                {Object.entries(categoryInfo).filter(([key]) => key !== category).slice(0, 5).map(([key, cat]) => (
                  <a 
                    href={`/categories/${key}`}
                    class="related-category-link"
                  >
                    <span class="related-category-icon">{cat.icon}</span>
                    <span>{cat.name}</span>
                  </a>
                ))}
              </div>
            </div>
          </div>
        </div>

        <!-- Main Content -->
        <div class="lg:col-span-3 category-main-content">
          <!-- Filters and Sort -->
          <div class="filters-bar">
            <div class="filters-content">
              <div class="filters-row">
                <div class="filters-info">
                  <span class="items-count">
                    {products.length} items in {info.name}
                  </span>
                </div>
                <div class="filters-controls">
                  <select class="filter-select">
                    <option>Sort by: Newest</option>
                    <option>Sort by: Price (Low to High)</option>
                    <option>Sort by: Price (High to Low)</option>
                    <option>Sort by: Most Popular</option>
                  </select>
                  <select class="filter-select">
                    <option>All Items</option>
                    <option>On Sale</option>
                    <option>Auctions</option>
                    <option>New</option>
                  </select>
                </div>
              </div>
            </div>
          </div>

          <!-- Products Grid -->
          {products.length > 0 ? (
            <div class="products-grid">
              {products.map((product: any) => (
                <div class="enhanced-product-card" data-product-id={product.id}>
                  <div class="product-image-container">
                    <img src={product.image} alt={product.name} class="product-image" />
                    <div class="product-badges">
                      {product.nft && (
                        <span class="product-badge nft">NFT</span>
                      )}
                      {product.solana && (
                        <span class="product-badge sol">SOL</span>
                      )}
                    </div>
                  </div>
                  <div class="product-info-container">
                    <h3 class="product-title">{product.name}</h3>
                    <p class="product-description">{product.description}</p>
                    <div class="product-price-container">
                      <span class="product-price">{product.price.toFixed(2)} SOL</span>
                    </div>
                    <div class="product-meta">
                      <span class="product-seller">by {product.seller}</span>
                      <span class="product-rating">‚≠ê 4.5 (12)</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          ) : (
            <div class="empty-state">
              <div class="empty-state-icon">{info.icon}</div>
              <h3 class="empty-state-title">No items found</h3>
              <p class="empty-state-description">There are no items in this category yet.</p>
              <button class="empty-state-button">
                Be the first to create one
              </button>
            </div>
          )}

          <!-- Load More -->
          {products.length > 0 && (
            <div class="load-more-container">
              <button class="load-more-button">
                Load More Items
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Enhanced client-side functionality for category pages
  document.addEventListener('DOMContentLoaded', () => {
    // Filter and sort functionality
    const sortSelect = document.querySelector('.filter-select');
    const filterSelect = document.querySelectorAll('.filter-select')[1];
    
    if (sortSelect) {
      sortSelect.addEventListener('change', (e) => {
        console.log('Sort changed:', (e.target as HTMLSelectElement).value);
        // In a real implementation, this would trigger a re-sort
        handleSort((e.target as HTMLSelectElement).value);
      });
    }
    
    if (filterSelect) {
      filterSelect.addEventListener('change', (e) => {
        console.log('Filter changed:', (e.target as HTMLSelectElement).value);
        // In a real implementation, this would trigger a re-filter
        handleFilter((e.target as HTMLSelectElement).value);
      });
    }

    // Enhanced product card interactions
    const productCards = document.querySelectorAll('.enhanced-product-card');
    
    productCards.forEach(card => {
      // Click handler
      card.addEventListener('click', () => {
        const productId = card.getAttribute('data-product-id');
        if (productId) {
          window.location.href = `/product/${productId}`;
        }
      });
      
      // Enhanced hover effects
      card.addEventListener('mouseenter', function(this: HTMLElement) {
        this.style.transform = 'translateY(-6px)';
        this.style.boxShadow = '0 8px 40px rgba(230, 0, 18, 0.25)';
      });
      
      card.addEventListener('mouseleave', function(this: HTMLElement) {
        this.style.transform = 'translateY(0)';
        this.style.boxShadow = '0 2px 12px rgba(0, 0, 0, 0.08)';
      });
    });

    // Load more functionality
    const loadMoreButton = document.querySelector('.load-more-button');
    if (loadMoreButton) {
      loadMoreButton.addEventListener('click', () => {
        console.log('Load more clicked');
        // In a real implementation, this would load more products
        loadMoreButton.textContent = 'Loading...';
        setTimeout(() => {
          loadMoreButton.textContent = 'Load More Items';
        }, 1000);
      });
    }

    // Empty state button
    const emptyStateButton = document.querySelector('.empty-state-button');
    if (emptyStateButton) {
      emptyStateButton.addEventListener('click', () => {
        window.location.href = '/sell';
      });
    }
  });

  // Sort functionality
  function handleSort(sortValue: string) {
    const productsGrid = document.querySelector('.products-grid');
    if (!productsGrid) return;

    const products = Array.from(productsGrid.children);
    
    products.sort((a, b) => {
      const aPrice = parseFloat(a.querySelector('.product-price')?.textContent?.replace(' SOL', '') || '0');
      const bPrice = parseFloat(b.querySelector('.product-price')?.textContent?.replace(' SOL', '') || '0');
      
      switch (sortValue) {
        case 'Sort by: Price (Low to High)':
          return aPrice - bPrice;
        case 'Sort by: Price (High to Low)':
          return bPrice - aPrice;
        default:
          return 0;
      }
    });

    // Re-append sorted products
    products.forEach(product => productsGrid.appendChild(product));
  }

  // Filter functionality
  function handleFilter(filterValue: string) {
    const products = document.querySelectorAll('.enhanced-product-card');
    
    products.forEach(product => {
      const isVisible = filterValue === 'All Items' || 
        (filterValue === 'On Sale' && product.querySelector('.product-badge.sale')) ||
        (filterValue === 'Auctions' && product.querySelector('.product-badge.auction')) ||
        (filterValue === 'New' && product.querySelector('.product-badge.new'));
      
      (product as HTMLElement).style.display = isVisible ? 'block' : 'none';
    });
  }
</script>
