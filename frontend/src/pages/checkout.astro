---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import AuthGuard from '../components/AuthGuard.astro';
import Card from '../components/atoms/Card.astro';
import Button from '../components/atoms/Button.astro';
import FormField from '../components/molecules/FormField.astro';
import ShoppingCart from '../components/organisms/ShoppingCart.astro';
---

<Layout title='Checkout - Soladia'>
  <Navigation />

  <AuthGuard requireAuth={true} redirectTo='/auth'>
    <main class='min-h-screen bg-gray-50 py-8'>
      <div class='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>
        <div class='mb-8'>
          <h1 class='text-3xl font-bold text-gray-900'>Checkout</h1>
          <p class='mt-2 text-gray-600'>Complete your purchase securely</p>
        </div>

        <div class='grid grid-cols-1 lg:grid-cols-2 gap-8'>
          <!-- Checkout Form -->
          <div class='space-y-8'>
            <!-- Shipping Information -->
            <Card variant='default' padding='lg'>
              <h2 class='text-xl font-semibold text-gray-900 mb-6'>
                Shipping Information
              </h2>
              <form id='shipping-form' class='space-y-4'>
                <div class='grid grid-cols-1 md:grid-cols-2 gap-4'>
                  <FormField
                    label='First Name'
                    name='firstName'
                    required={true}
                    placeholder='Enter your first name'
                  />
                  <FormField
                    label='Last Name'
                    name='lastName'
                    required={true}
                    placeholder='Enter your last name'
                  />
                </div>

                <FormField
                  label='Email'
                  name='email'
                  type='email'
                  required={true}
                  placeholder='Enter your email address'
                />

                <FormField
                  label='Phone'
                  name='phone'
                  type='tel'
                  required={true}
                  placeholder='Enter your phone number'
                />

                <FormField
                  label='Address'
                  name='address'
                  required={true}
                  placeholder='Enter your street address'
                />

                <div class='grid grid-cols-1 md:grid-cols-3 gap-4'>
                  <FormField
                    label='City'
                    name='city'
                    required={true}
                    placeholder='Enter your city'
                  />
                  <FormField
                    label='State'
                    name='state'
                    required={true}
                    placeholder='Enter your state'
                  />
                  <FormField
                    label='ZIP Code'
                    name='zipCode'
                    required={true}
                    placeholder='Enter ZIP code'
                  />
                </div>

                <div class='grid grid-cols-1 md:grid-cols-2 gap-4'>
                  <FormField
                    label='Country'
                    name='country'
                    required={true}
                    placeholder='Enter your country'
                  />
                  <FormField
                    label='Shipping Method'
                    name='shippingMethod'
                    required={true}
                    placeholder='Select shipping method'
                  />
                </div>
              </form>
            </Card>

            <!-- Payment Information -->
            <Card variant='default' padding='lg'>
              <h2 class='text-xl font-semibold text-gray-900 mb-6'>
                Payment Information
              </h2>
              <form id='payment-form' class='space-y-4'>
                <div class='space-y-4'>
                  <div>
                    <label class='block text-sm font-medium text-gray-700 mb-2'>
                      Payment Method
                    </label>
                    <div class='space-y-2'>
                      <label
                        class='flex items-center p-3 border border-gray-300 rounded-md cursor-pointer hover:bg-gray-50'
                      >
                        <input
                          type='radio'
                          name='paymentMethod'
                          value='card'
                          class='mr-3'
                          checked
                        />
                        <div class='flex items-center'>
                          <svg
                            class='w-6 h-6 mr-2 text-gray-400'
                            fill='none'
                            stroke='currentColor'
                            viewBox='0 0 24 24'
                          >
                            <path
                              stroke-linecap='round'
                              stroke-linejoin='round'
                              stroke-width='2'
                              d='M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z'
                            ></path>
                          </svg>
                          Credit/Debit Card
                        </div>
                      </label>
                      <label
                        class='flex items-center p-3 border border-gray-300 rounded-md cursor-pointer hover:bg-gray-50'
                      >
                        <input
                          type='radio'
                          name='paymentMethod'
                          value='solana'
                          class='mr-3'
                        />
                        <div class='flex items-center'>
                          <svg
                            class='w-6 h-6 mr-2 text-purple-500'
                            fill='currentColor'
                            viewBox='0 0 24 24'
                          >
                            <path
                              d='M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5'
                            ></path>
                          </svg>
                          Solana Wallet
                        </div>
                      </label>
                    </div>
                  </div>
                </div>

                <div id='card-payment' class='space-y-4'>
                  <FormField
                    label='Card Number'
                    name='cardNumber'
                    placeholder='1234 5678 9012 3456'
                    required={true}
                  />

                  <div class='grid grid-cols-2 gap-4'>
                    <FormField
                      label='Expiry Date'
                      name='expiryDate'
                      placeholder='MM/YY'
                      required={true}
                    />
                    <FormField
                      label='CVV'
                      name='cvv'
                      placeholder='123'
                      required={true}
                    />
                  </div>

                  <FormField
                    label='Cardholder Name'
                    name='cardholderName'
                    placeholder='Name on card'
                    required={true}
                  />
                </div>

                <div id='solana-payment' class='space-y-4 hidden'>
                  <div class='p-4 bg-purple-50 rounded-lg'>
                    <h3 class='text-sm font-medium text-purple-900 mb-2'>
                      Solana Wallet Payment
                    </h3>
                    <p class='text-sm text-purple-700 mb-4'>
                      Connect your Solana wallet to pay with SOL or SPL tokens.
                    </p>
                    <Button
                      type='button'
                      variant='outline'
                      size='md'
                      onclick='connectSolanaWallet()'
                    >
                      Connect Wallet
                    </Button>
                  </div>
                </div>
              </form>
            </Card>

            <!-- Order Notes -->
            <Card variant='default' padding='lg'>
              <h2 class='text-xl font-semibold text-gray-900 mb-6'>
                Order Notes
              </h2>
              <FormField
                label='Special Instructions'
                name='orderNotes'
                placeholder='Any special instructions for your order...'
                helperText='Optional: Add any special delivery instructions or notes'
              />
            </Card>
          </div>

          <!-- Order Summary -->
          <div class='space-y-6'>
            <Card variant='default' padding='lg'>
              <h2 class='text-xl font-semibold text-gray-900 mb-6'>
                Order Summary
              </h2>
              <ShoppingCart
                showCheckoutButton={false}
                showRemoveButtons={false}
              />
            </Card>

            <!-- Security & Trust -->
            <Card variant='filled' padding='md'>
              <div class='flex items-start space-x-3'>
                <svg
                  class='w-6 h-6 text-green-500 mt-0.5'
                  fill='none'
                  stroke='currentColor'
                  viewBox='0 0 24 24'
                >
                  <path
                    stroke-linecap='round'
                    stroke-linejoin='round'
                    stroke-width='2'
                    d='M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z'></path>
                </svg>
                <div>
                  <h3 class='text-sm font-medium text-gray-900'>
                    Secure Checkout
                  </h3>
                  <p class='text-sm text-gray-600 mt-1'>
                    Your payment information is encrypted and secure. We never
                    store your card details.
                  </p>
                </div>
              </div>
            </Card>

            <!-- Terms & Conditions -->
            <Card variant='filled' padding='md'>
              <div class='flex items-start space-x-3'>
                <input
                  type='checkbox'
                  id='terms'
                  name='terms'
                  class='mt-1 h-4 w-4 text-soladia-primary focus:ring-soladia-primary border-gray-300 rounded'
                  required
                />
                <label for='terms' class='text-sm text-gray-600'>
                  I agree to the{' '}
                  <a
                    href='/terms'
                    class='text-soladia-primary hover:text-red-700 underline'
                  >
                    Terms of Service
                  </a>{' '}
                  and{' '}
                  <a
                    href='/privacy'
                    class='text-soladia-primary hover:text-red-700 underline'
                  >
                    Privacy Policy
                  </a>
                </label>
              </div>
            </Card>

            <!-- Place Order Button -->
            <Button
              id='place-order-btn'
              variant='primary'
              size='xl'
              fullWidth
              onclick='placeOrder()'
            >
              Place Order
            </Button>
          </div>
        </div>
      </div>
    </main>
  </AuthGuard>
</Layout>

<script>
  let cartService: any;
  let authManager: any;

  // Initialize services
  document.addEventListener('DOMContentLoaded', () => {
    cartService = (window as any).cartService;
    authManager = (window as any).authManager;

    if (!cartService) {
      console.error('Cart service not available');
      return;
    }

    // Validate cart before allowing checkout
    const validation = cartService.validateCart();
    if (!validation.valid) {
      showNotification(validation.errors.join(', '), 'error');
      setTimeout(() => {
        window.location.href = '/cart';
      }, 3000);
      return;
    }

    // Setup payment method toggle
    setupPaymentMethodToggle();

    // Pre-fill user information
    prefillUserInfo();
  });

  // Setup payment method toggle
  function setupPaymentMethodToggle() {
    const paymentMethods = document.querySelectorAll(
      'input[name="paymentMethod"]'
    );
    const cardPayment = document.getElementById('card-payment');
    const solanaPayment = document.getElementById('solana-payment');

    paymentMethods.forEach(method => {
      method.addEventListener('change', e => {
        const target = e.target as HTMLInputElement;
        if (target.value === 'card') {
          cardPayment?.classList.remove('hidden');
          solanaPayment?.classList.add('hidden');
        } else if (target.value === 'solana') {
          cardPayment?.classList.add('hidden');
          solanaPayment?.classList.remove('hidden');
        }
      });
    });
  }

  // Pre-fill user information
  function prefillUserInfo() {
    if (!authManager) return;

    const user = authManager.getCurrentUser();
    if (!user) return;

    // Pre-fill email
    const emailField = document.querySelector(
      'input[name="email"]'
    ) as HTMLInputElement;
    if (emailField && user.email) {
      emailField.value = user.email;
    }

    // Pre-fill name if available
    if (user.full_name) {
      const nameParts = user.full_name.split(' ');
      const firstNameField = document.querySelector(
        'input[name="firstName"]'
      ) as HTMLInputElement;
      const lastNameField = document.querySelector(
        'input[name="lastName"]'
      ) as HTMLInputElement;

      if (firstNameField && nameParts[0]) {
        firstNameField.value = nameParts[0];
      }
      if (lastNameField && nameParts[1]) {
        lastNameField.value = nameParts.slice(1).join(' ');
      }
    }
  }

  // Connect Solana wallet
  function connectSolanaWallet() {
    // Mock wallet connection - replace with actual Solana wallet integration
    showNotification('Connecting to Solana wallet...', 'info');

    setTimeout(() => {
      showNotification('Wallet connected successfully!', 'success');
    }, 2000);
  }

  // Place order
  function placeOrder() {
    if (!cartService) {
      showNotification('Cart service not available', 'error');
      return;
    }

    // Validate forms
    const shippingForm = document.getElementById(
      'shipping-form'
    ) as HTMLFormElement;
    const paymentForm = document.getElementById(
      'payment-form'
    ) as HTMLFormElement;
    const termsCheckbox = document.getElementById('terms') as HTMLInputElement;

    if (!shippingForm.checkValidity()) {
      showNotification(
        'Please fill in all required shipping information',
        'error'
      );
      return;
    }

    if (!paymentForm.checkValidity()) {
      showNotification(
        'Please fill in all required payment information',
        'error'
      );
      return;
    }

    if (!termsCheckbox.checked) {
      showNotification('Please accept the terms and conditions', 'error');
      return;
    }

    // Get form data
    const formData = new FormData(shippingForm);
    const paymentData = new FormData(paymentForm);

    const orderData = {
      shipping: Object.fromEntries(formData),
      payment: Object.fromEntries(paymentData),
      cart: cartService.exportForCheckout(),
      user: authManager?.getCurrentUser(),
    };

    // Show loading state
    const placeOrderBtn = document.getElementById(
      'place-order-btn'
    ) as HTMLButtonElement;
    if (placeOrderBtn) {
      placeOrderBtn.disabled = true;
      placeOrderBtn.textContent = 'Processing...';
    }

    // Mock order processing - replace with actual API call
    setTimeout(() => {
      // Clear cart
      cartService.clear();

      // Show success message
      showNotification('Order placed successfully!', 'success');

      // Redirect to order confirmation
      setTimeout(() => {
        window.location.href = '/order-confirmation';
      }, 2000);
    }, 3000);
  }

  // Show notification
  function showNotification(
    message: string,
    type: 'success' | 'error' | 'info'
  ) {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 p-4 rounded-md text-white z-50 ${
      type === 'success'
        ? 'bg-green-500'
        : type === 'error'
          ? 'bg-red-500'
          : 'bg-blue-500'
    }`;
    notification.textContent = message;
    document.body.appendChild(notification);

    setTimeout(() => {
      notification.remove();
    }, 5000);
  }
</script>

<style>
  .checkout-form input:focus,
  .checkout-form textarea:focus,
  .checkout-form select:focus {
    outline: none;
    border-color: var(--soladia-primary);
    box-shadow: 0 0 0 3px rgba(230, 0, 18, 0.1);
  }

  .checkout-form input[type='radio']:checked {
    background-color: var(--soladia-primary);
    border-color: var(--soladia-primary);
  }

  .checkout-form button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
</style>
