---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import SolanaWallet from '../components/solana/SolanaWallet.astro';
import TransactionHistory from '../components/solana/TransactionHistory.astro';

// Sample user data
const user = {
  id: 1,
  username: "crypto_trader",
  email: "user@example.com",
  fullName: "John Doe",
  avatar: "https://via.placeholder.com/150x150/4F46E5/FFFFFF?text=JD",
  walletAddress: "9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM",
  joinDate: "2024-01-15",
  rating: 4.8,
  totalSales: 156,
  totalPurchases: 89
};

const recentOrders = [
  {
    id: "ORD-001",
    date: "2024-01-20",
    status: "Delivered",
    total: 299.99,
    items: 2
  },
  {
    id: "ORD-002", 
    date: "2024-01-18",
    status: "Shipped",
    total: 199.99,
    items: 1
  }
];

const recentListings = [
  {
    id: 1,
    title: "Vintage Camera Collection",
    price: 299.99,
    status: "Active",
    views: 45,
    watchers: 3
  },
  {
    id: 2,
    title: "Wireless Headphones",
    price: 199.99,
    status: "Sold",
    views: 89,
    watchers: 7
  }
];
---

<Layout title="Profile - Soladia">
  <Navigation />
  
  <div class="profile-container">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div class="profile-header">
        <div class="profile-avatar">
          <img src={user.avatar} alt={user.fullName} />
        </div>
        <div class="profile-info">
          <h1 class="profile-name">{user.fullName}</h1>
          <p class="profile-username">@{user.username}</p>
          <div class="profile-stats">
            <div class="stat">
              <span class="stat-value">{user.rating}</span>
              <span class="stat-label">Rating</span>
            </div>
            <div class="stat">
              <span class="stat-value">{user.totalSales}</span>
              <span class="stat-label">Sales</span>
            </div>
            <div class="stat">
              <span class="stat-value">{user.totalPurchases}</span>
              <span class="stat-label">Purchases</span>
            </div>
          </div>
        </div>
        <div class="profile-actions">
          <button class="btn-secondary">Edit Profile</button>
          <button class="btn-primary">Settings</button>
        </div>
      </div>

      <div class="profile-content">
        <!-- Solana Wallet Section -->
        <div class="profile-section">
          <h2 class="section-title">Solana Wallet</h2>
          <div class="wallet-container">
            <SolanaWallet />
          </div>
        </div>

        <!-- Account Information -->
        <div class="profile-section">
          <h2 class="section-title">Account Information</h2>
          <div class="info-grid">
            <div class="info-item">
              <label>Email</label>
              <span>{user.email}</span>
            </div>
            <div class="info-item">
              <label>Member Since</label>
              <span>{new Date(user.joinDate).toLocaleDateString()}</span>
            </div>
            <div class="info-item">
              <label>Wallet Address</label>
              <span class="wallet-address">{user.walletAddress}</span>
            </div>
            <div class="info-item">
              <label>Account Status</label>
              <span class="status-verified">Verified</span>
            </div>
          </div>
        </div>

        <!-- Recent Orders -->
        <div class="profile-section">
          <h2 class="section-title">Recent Orders</h2>
          <div class="orders-table">
            <div class="table-header">
              <span>Order ID</span>
              <span>Date</span>
              <span>Status</span>
              <span>Total</span>
              <span>Items</span>
            </div>
            {recentOrders.map((order) => (
              <div class="table-row">
                <span class="order-id">{order.id}</span>
                <span class="order-date">{new Date(order.date).toLocaleDateString()}</span>
                <span class={`order-status status-${order.status.toLowerCase()}`}>{order.status}</span>
                <span class="order-total">${order.total.toFixed(2)}</span>
                <span class="order-items">{order.items}</span>
              </div>
            ))}
          </div>
        </div>

        <!-- My Listings -->
        <div class="profile-section">
          <h2 class="section-title">My Listings</h2>
          <div class="listings-grid">
            {recentListings.map((listing) => (
              <div class="listing-card">
                <div class="listing-info">
                  <h3 class="listing-title">{listing.title}</h3>
                  <p class="listing-price">${listing.price.toFixed(2)}</p>
                </div>
                <div class="listing-stats">
                  <div class="stat">
                    <span class="stat-value">{listing.views}</span>
                    <span class="stat-label">Views</span>
                  </div>
                  <div class="stat">
                    <span class="stat-value">{listing.watchers}</span>
                    <span class="stat-label">Watchers</span>
                  </div>
                </div>
                <div class="listing-actions">
                  <span class={`status-badge status-${listing.status.toLowerCase()}`}>{listing.status}</span>
                  <button class="btn-small">Edit</button>
                </div>
              </div>
            ))}
          </div>
        </div>

        <!-- Transaction History -->
        <div class="profile-section">
          <h2 class="section-title">Transaction History</h2>
          <div class="transaction-container">
            <TransactionHistory />
          </div>
        </div>

        <!-- Security Settings -->
        <div class="profile-section">
          <h2 class="section-title">Security Settings</h2>
          <div class="security-options">
            <div class="security-item">
              <div class="security-info">
                <h3>Two-Factor Authentication</h3>
                <p>Add an extra layer of security to your account</p>
              </div>
              <button class="btn-outline">Enable</button>
            </div>
            <div class="security-item">
              <div class="security-info">
                <h3>Wallet Security</h3>
                <p>Manage your Solana wallet security settings</p>
              </div>
              <button class="btn-outline">Configure</button>
            </div>
            <div class="security-item">
              <div class="security-info">
                <h3>Login Activity</h3>
                <p>View recent login activity and sessions</p>
              </div>
              <button class="btn-outline">View</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Copy wallet address functionality
    const walletAddress = document.querySelector('.wallet-address');
    if (walletAddress) {
      walletAddress.addEventListener('click', () => {
        navigator.clipboard.writeText(walletAddress.textContent || '');
        showNotification('Wallet address copied to clipboard!', 'success');
      });
    }

    // Order row click handlers
    const orderRows = document.querySelectorAll('.table-row');
    orderRows.forEach(row => {
      row.addEventListener('click', () => {
        const orderId = row.querySelector('.order-id')?.textContent;
        if (orderId) {
          window.location.href = `/orders/${orderId}`;
        }
      });
    });
  });

  function showNotification(message: string, type: 'success' | 'error' | 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.remove();
    }, 3000);
  }
</script>

<style>
  .profile-container {
    @apply min-h-screen bg-gray-50;
  }

  .profile-header {
    @apply bg-white rounded-lg shadow-sm p-8 mb-8 flex items-center space-x-6;
  }

  .profile-avatar img {
    @apply w-24 h-24 rounded-full object-cover;
  }

  .profile-info {
    @apply flex-1;
  }

  .profile-name {
    @apply text-2xl font-bold text-gray-900 mb-1;
  }

  .profile-username {
    @apply text-gray-600 mb-4;
  }

  .profile-stats {
    @apply flex space-x-6;
  }

  .stat {
    @apply text-center;
  }

  .stat-value {
    @apply block text-2xl font-bold text-gray-900;
  }

  .stat-label {
    @apply text-sm text-gray-600;
  }

  .profile-actions {
    @apply flex space-x-3;
  }

  .profile-content {
    @apply space-y-8;
  }

  .profile-section {
    @apply bg-white rounded-lg shadow-sm p-6;
  }

  .section-title {
    @apply text-xl font-semibold text-gray-900 mb-6;
  }

  .wallet-container {
    @apply max-w-2xl;
  }

  .info-grid {
    @apply grid grid-cols-1 md:grid-cols-2 gap-4;
  }

  .info-item {
    @apply flex justify-between items-center py-3 border-b border-gray-200;
  }

  .info-item label {
    @apply font-medium text-gray-700;
  }

  .wallet-address {
    @apply font-mono text-sm text-blue-600 cursor-pointer hover:text-blue-800;
  }

  .status-verified {
    @apply text-green-600 font-medium;
  }

  .orders-table {
    @apply space-y-2;
  }

  .table-header {
    @apply grid grid-cols-5 gap-4 py-3 font-semibold text-gray-700 border-b-2 border-gray-200;
  }

  .table-row {
    @apply grid grid-cols-5 gap-4 py-3 hover:bg-gray-50 cursor-pointer transition-colors;
  }

  .order-id {
    @apply font-mono text-sm text-blue-600;
  }

  .order-date {
    @apply text-gray-600;
  }

  .order-status {
    @apply px-2 py-1 rounded-full text-xs font-medium;
  }

  .status-delivered {
    @apply bg-green-100 text-green-800;
  }

  .status-shipped {
    @apply bg-blue-100 text-blue-800;
  }

  .status-pending {
    @apply bg-yellow-100 text-yellow-800;
  }

  .order-total {
    @apply font-semibold text-gray-900;
  }

  .order-items {
    @apply text-gray-600;
  }

  .listings-grid {
    @apply grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4;
  }

  .listing-card {
    @apply border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow;
  }

  .listing-info {
    @apply mb-3;
  }

  .listing-title {
    @apply font-semibold text-gray-900 mb-1;
  }

  .listing-price {
    @apply text-lg font-bold text-green-600;
  }

  .listing-stats {
    @apply flex space-x-4 mb-3;
  }

  .listing-actions {
    @apply flex justify-between items-center;
  }

  .status-badge {
    @apply px-2 py-1 rounded-full text-xs font-medium;
  }

  .status-active {
    @apply bg-green-100 text-green-800;
  }

  .status-sold {
    @apply bg-gray-100 text-gray-800;
  }

  .btn-small {
    @apply px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors;
  }

  .transaction-container {
    @apply max-w-4xl;
  }

  .security-options {
    @apply space-y-4;
  }

  .security-item {
    @apply flex justify-between items-center p-4 border border-gray-200 rounded-lg;
  }

  .security-info h3 {
    @apply font-semibold text-gray-900 mb-1;
  }

  .security-info p {
    @apply text-sm text-gray-600;
  }

  .btn-primary {
    @apply px-4 py-2 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-colors;
  }

  .btn-secondary {
    @apply px-4 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 transition-colors;
  }

  .btn-outline {
    @apply px-4 py-2 border border-gray-300 text-gray-700 rounded-lg font-medium hover:bg-gray-50 transition-colors;
  }

  .notification {
    @apply fixed top-4 right-4 px-4 py-2 rounded-lg text-white font-medium z-50;
  }

  .notification-success {
    @apply bg-green-600;
  }

  .notification-error {
    @apply bg-red-600;
  }

  .notification-info {
    @apply bg-blue-600;
  }
</style>
