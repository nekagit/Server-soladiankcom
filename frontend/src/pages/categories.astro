---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import type { Category } from '../types';

// Sample categories data - in a real app, this would come from an API
const categories: Category[] = [
  {
    id: 1,
    name: "Electronics",
    description: "Electronic devices, gadgets, and accessories",
    slug: "electronics",
    icon: "📱",
    is_active: true,
    created_at: "2025-01-01T00:00:00Z",
    updated_at: "2025-01-01T00:00:00Z",
    product_count: 12345
  },
  {
    id: 2,
    name: "Fashion",
    description: "Clothing, shoes, and fashion accessories",
    slug: "fashion",
    icon: "👕",
    is_active: true,
    created_at: "2025-01-01T00:00:00Z",
    updated_at: "2025-01-01T00:00:00Z",
    product_count: 8765
  },
  {
    id: 3,
    name: "Home & Garden",
    description: "Furniture, decor, and garden supplies",
    slug: "home-garden",
    icon: "🏠",
    is_active: true,
    created_at: "2025-01-01T00:00:00Z",
    updated_at: "2025-01-01T00:00:00Z",
    product_count: 5432
  },
  {
    id: 4,
    name: "Automotive",
    description: "Car parts, accessories, and automotive tools",
    slug: "automotive",
    icon: "🚗",
    is_active: true,
    created_at: "2025-01-01T00:00:00Z",
    updated_at: "2025-01-01T00:00:00Z",
    product_count: 3210
  },
  {
    id: 5,
    name: "Gaming",
    description: "Video games, consoles, and gaming accessories",
    slug: "gaming",
    icon: "🎮",
    is_active: true,
    created_at: "2025-01-01T00:00:00Z",
    updated_at: "2025-01-01T00:00:00Z",
    product_count: 6789
  },
  {
    id: 6,
    name: "Jewelry",
    description: "Rings, necklaces, watches, and precious stones",
    slug: "jewelry",
    icon: "💎",
    is_active: true,
    created_at: "2025-01-01T00:00:00Z",
    updated_at: "2025-01-01T00:00:00Z",
    product_count: 2456
  },
  {
    id: 7,
    name: "Sports & Outdoors",
    description: "Sports equipment, outdoor gear, and fitness",
    slug: "sports-outdoors",
    icon: "⚽",
    is_active: true,
    created_at: "2025-01-01T00:00:00Z",
    updated_at: "2025-01-01T00:00:00Z",
    product_count: 4321
  },
  {
    id: 8,
    name: "Books & Media",
    description: "Books, movies, music, and educational materials",
    slug: "books-media",
    icon: "📚",
    is_active: true,
    created_at: "2025-01-01T00:00:00Z",
    updated_at: "2025-01-01T00:00:00Z",
    product_count: 5678
  },
  {
    id: 9,
    name: "Health & Beauty",
    description: "Cosmetics, skincare, and health products",
    slug: "health-beauty",
    icon: "💄",
    is_active: true,
    created_at: "2025-01-01T00:00:00Z",
    updated_at: "2025-01-01T00:00:00Z",
    product_count: 3456
  },
  {
    id: 10,
    name: "Toys & Games",
    description: "Children's toys, board games, and puzzles",
    slug: "toys-games",
    icon: "🧸",
    is_active: true,
    created_at: "2025-01-01T00:00:00Z",
    updated_at: "2025-01-01T00:00:00Z",
    product_count: 2345
  },
  {
    id: 11,
    name: "Art & Collectibles",
    description: "Artwork, antiques, and collectible items",
    slug: "art-collectibles",
    icon: "🎨",
    is_active: true,
    created_at: "2025-01-01T00:00:00Z",
    updated_at: "2025-01-01T00:00:00Z",
    product_count: 1876
  },
  {
    id: 12,
    name: "Business & Industrial",
    description: "Office supplies, industrial equipment, and tools",
    slug: "business-industrial",
    icon: "💼",
    is_active: true,
    created_at: "2025-01-01T00:00:00Z",
    updated_at: "2025-01-01T00:00:00Z",
    product_count: 4567
  }
];

const formatCount = (count: number) => {
  if (count >= 1000000) {
    return `${(count / 1000000).toFixed(1)}M`;
  } else if (count >= 1000) {
    return `${(count / 1000).toFixed(1)}K`;
  }
  return count.toString();
};
---

<Layout title="Categories - Soladia Marketplace">
  <Navigation />
  
  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Header -->
    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">Shop by Category</h1>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto">
        Discover amazing products across all categories. From electronics to fashion, 
        find exactly what you're looking for on Soladia.
      </p>
    </div>

    <!-- Search and Filter Bar -->
    <div class="mb-8">
      <div class="max-w-2xl mx-auto">
        <div class="relative">
          <input 
            type="text" 
            placeholder="Search categories..." 
            class="w-full px-4 py-3 pl-12 pr-4 border-2 border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white shadow-sm"
            id="category-search"
          />
          <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
            <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
          </div>
        </div>
      </div>
    </div>

    <!-- Categories Grid -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-12">
      {categories.map((category) => (
        <div 
          class="category-card group cursor-pointer"
          data-category={category.name}
          data-description={category.description}
        >
          <div class="text-center">
            <div class="text-6xl mb-4 group-hover:scale-110 transition-transform duration-200">
              {category.icon}
            </div>
            <h3 class="text-xl font-semibold text-gray-900 mb-2 group-hover:text-blue-600 transition-colors">
              {category.name}
            </h3>
            <p class="text-gray-600 text-sm mb-3 line-clamp-2">
              {category.description}
            </p>
            <div class="flex items-center justify-center space-x-2 text-sm text-gray-500">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"></path>
              </svg>
              <span>{formatCount(category.product_count || 0)} items</span>
            </div>
          </div>
        </div>
      ))}
    </div>

    <!-- Popular Categories Section -->
    <div class="bg-gray-50 rounded-2xl p-8 mb-12">
      <h2 class="text-2xl font-bold text-gray-900 mb-6 text-center">Popular Categories</h2>
      <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
        {categories.slice(0, 4).map((category) => (
          <div class="bg-white rounded-lg p-4 text-center hover:shadow-md transition-shadow">
            <div class="text-3xl mb-2">{category.icon}</div>
            <h4 class="font-semibold text-gray-900 mb-1">{category.name}</h4>
            <p class="text-sm text-gray-600">{formatCount(category.product_count || 0)} items</p>
          </div>
        ))}
      </div>
    </div>

    <!-- Call to Action -->
    <div class="text-center bg-gradient-to-r from-red-600 to-blue-600 rounded-2xl p-12 text-white">
      <h2 class="text-3xl font-bold mb-4">Can't Find What You're Looking For?</h2>
      <p class="text-xl mb-8 opacity-90">
        Browse all products or use our advanced search to find exactly what you need.
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <a 
          href="/search" 
          class="bg-white text-gray-900 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors"
        >
          Browse All Products
        </a>
        <a 
          href="/sell" 
          class="border-2 border-white text-white px-8 py-3 rounded-lg font-semibold hover:bg-white hover:text-gray-900 transition-colors"
        >
          Start Selling
        </a>
      </div>
    </div>
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('category-search') as HTMLInputElement;
    const categoryCards = document.querySelectorAll('.category-card');

    // Search functionality
    searchInput.addEventListener('input', (e) => {
      const query = (e.target as HTMLInputElement).value.toLowerCase();
      
      categoryCards.forEach(card => {
        const categoryName = card.getAttribute('data-category')?.toLowerCase() || '';
        const description = card.getAttribute('data-description')?.toLowerCase() || '';
        
        if (categoryName.includes(query) || description.includes(query)) {
          (card as HTMLElement).style.display = 'block';
        } else {
          (card as HTMLElement).style.display = 'none';
        }
      });
    });

    // Category card click handlers
    categoryCards.forEach(card => {
      card.addEventListener('click', () => {
        const categoryName = card.getAttribute('data-category');
        if (categoryName) {
          window.location.href = `/categories/${categoryName.toLowerCase().replace(/\s+/g, '-')}`;
        }
      });
    });
  });
</script>
