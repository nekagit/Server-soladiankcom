---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';

const demoCredentials = {
  email: 'demo@soladia.com',
  password: 'demo123'
};
---

<Layout title="Sign In to Soladia - Authentication">
  <Navigation />
  
  <main class="min-h-screen bg-gradient-to-br from-blue-50 to-red-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <!-- Auth Container -->
      <div class="auth-container">
        <!-- Header -->
        <div class="auth-header">
          <h1 class="auth-title">Welcome Back</h1>
          <p class="auth-subtitle">Sign in to your Soladia account</p>
        </div>

        <!-- Demo Credentials -->
        <div class="demo-credentials">
          <p><strong>Demo Account:</strong> {demoCredentials.email} / {demoCredentials.password}</p>
        </div>

        <!-- Tab Navigation -->
        <div class="auth-tabs">
          <button class="auth-tab active" id="signin-tab">Sign In</button>
          <button class="auth-tab" id="signup-tab">Sign Up</button>
        </div>

        <!-- Sign In Form -->
        <form class="auth-form" id="signin-form">
          <div class="form-group">
            <label for="signin-email" class="form-label">Email Address</label>
            <input 
              type="email" 
              id="signin-email" 
              class="form-input" 
              placeholder="Enter your email"
              value={demoCredentials.email}
              required
            />
          </div>

          <div class="form-group">
            <label for="signin-password" class="form-label">Password</label>
            <div class="password-container">
              <input 
                type="password" 
                id="signin-password" 
                class="form-input" 
                placeholder="Enter your password"
                value={demoCredentials.password}
                required
              />
              <button type="button" class="password-toggle" id="signin-toggle">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                </svg>
              </button>
            </div>
          </div>

          <div class="flex items-center justify-between">
            <div class="checkbox-container">
              <input type="checkbox" id="remember-me" class="checkbox-input" />
              <label for="remember-me" class="checkbox-label">Remember me</label>
            </div>
            <a href="/forgot-password" class="text-sm text-blue-600 hover:text-blue-800">Forgot password?</a>
          </div>

          <button type="submit" class="btn-primary w-full">
            Sign In
          </button>
        </form>

        <!-- Sign Up Form (Hidden by default) -->
        <form class="auth-form hidden" id="signup-form">
          <div class="form-group">
            <label for="signup-email" class="form-label">Email Address</label>
            <input 
              type="email" 
              id="signup-email" 
              class="form-input" 
              placeholder="Enter your email"
              required
            />
          </div>

          <div class="form-group">
            <label for="signup-username" class="form-label">Username</label>
            <input 
              type="text" 
              id="signup-username" 
              class="form-input" 
              placeholder="Choose a username"
              required
            />
          </div>

          <div class="form-group">
            <label for="signup-firstname" class="form-label">First Name</label>
            <input 
              type="text" 
              id="signup-firstname" 
              class="form-input" 
              placeholder="Enter your first name"
              required
            />
          </div>

          <div class="form-group">
            <label for="signup-lastname" class="form-label">Last Name</label>
            <input 
              type="text" 
              id="signup-lastname" 
              class="form-input" 
              placeholder="Enter your last name"
              required
            />
          </div>

          <div class="form-group">
            <label for="signup-password" class="form-label">Password</label>
            <div class="password-container">
              <input 
                type="password" 
                id="signup-password" 
                class="form-input" 
                placeholder="Create a password"
                required
              />
              <button type="button" class="password-toggle" id="signup-toggle">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                </svg>
              </button>
            </div>
          </div>

          <div class="checkbox-container">
            <input type="checkbox" id="agree-terms" class="checkbox-input" required />
            <label for="agree-terms" class="checkbox-label">
              I agree to the <a href="/terms" class="text-blue-600 hover:text-blue-800">Terms of Service</a> and <a href="/privacy" class="text-blue-600 hover:text-blue-800">Privacy Policy</a>
            </label>
          </div>

          <button type="submit" class="btn-primary w-full">
            Create Account
          </button>
        </form>

        <!-- Divider -->
        <div class="divider">
          <span>or continue with</span>
        </div>

        <!-- Social Login Buttons -->
        <div class="social-buttons">
          <button class="social-btn" id="google-login">
            <svg class="w-5 h-5" viewBox="0 0 24 24">
              <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
              <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
              <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
              <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
            </svg>
            Google
          </button>
          <button class="social-btn" id="github-login">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
            GitHub
          </button>
        </div>

        <!-- Solana Wallet Section -->
        <div class="wallet-section">
          <div class="wallet-title">
            <h3>Connect Solana Wallet</h3>
            <p>Use your Solana wallet for seamless payments</p>
          </div>
          
          <div class="wallet-buttons">
            <button class="wallet-btn" id="connect-phantom">
              <svg class="w-6 h-6" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm0 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z"/>
                <path d="M12 6c-3.314 0-6 2.686-6 6s2.686 6 6 6 6-2.686 6-6-2.686-6-6-6zm0 10c-2.206 0-4-1.794-4-4s1.794-4 4-4 4 1.794 4 4-1.794 4-4 4z"/>
              </svg>
              Connect Phantom Wallet
            </button>
          </div>
        </div>

        <!-- Security Notice -->
        <div class="security-notice">
          <h4>ðŸ”’ Secure & Private</h4>
          <p>Your data is encrypted and protected. We never store your wallet private keys.</p>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const signinTab = document.getElementById('signin-tab');
    const signupTab = document.getElementById('signup-tab');
    const signinForm = document.getElementById('signin-form');
    const signupForm = document.getElementById('signup-form');
    const passwordToggles = document.querySelectorAll('.password-toggle');
    const connectPhantomBtn = document.getElementById('connect-phantom');

    // Tab switching
    signinTab?.addEventListener('click', () => {
      signinTab.classList.add('active');
      signupTab?.classList.remove('active');
      signinForm?.classList.remove('hidden');
      signupForm?.classList.add('hidden');
    });

    signupTab?.addEventListener('click', () => {
      signupTab.classList.add('active');
      signinTab?.classList.remove('active');
      signupForm?.classList.remove('hidden');
      signinForm?.classList.add('hidden');
    });

    // Password visibility toggle
    passwordToggles.forEach(toggle => {
      toggle.addEventListener('click', () => {
        const input = toggle.parentElement?.querySelector('input');
        if (input) {
          input.type = input.type === 'password' ? 'text' : 'password';
        }
      });
    });

    // Form submissions
    signinForm?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target as HTMLFormElement);
      const email = formData.get('signin-email') as string;
      const password = formData.get('signin-password') as string;
      
      // Simulate login
      console.log('Signing in with:', { email, password });
      // In a real app, you would call the API here
      alert('Login functionality will be implemented with the backend API');
    });

    signupForm?.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(e.target as HTMLFormElement);
      const userData = {
        email: formData.get('signup-email'),
        username: formData.get('signup-username'),
        first_name: formData.get('signup-firstname'),
        last_name: formData.get('signup-lastname'),
        password: formData.get('signup-password')
      };
      
      // Simulate registration
      console.log('Signing up with:', userData);
      // In a real app, you would call the API here
      alert('Registration functionality will be implemented with the backend API');
    });

    // Phantom wallet connection
    connectPhantomBtn?.addEventListener('click', async () => {
      try {
        if (typeof window !== 'undefined' && window.solana?.isPhantom) {
          const response = await window.solana.connect();
          console.log('Connected to Phantom:', response.publicKey.toString());
          alert(`Connected to Phantom wallet: ${response.publicKey.toString().slice(0, 8)}...`);
        } else {
          alert('Phantom wallet not found. Please install Phantom wallet.');
        }
      } catch (error) {
        console.error('Failed to connect wallet:', error);
        alert('Failed to connect wallet. Please try again.');
      }
    });

    // Social login buttons
    document.getElementById('google-login')?.addEventListener('click', () => {
      alert('Google login will be implemented with OAuth');
    });

    document.getElementById('github-login')?.addEventListener('click', () => {
      alert('GitHub login will be implemented with OAuth');
    });
  });
</script>
