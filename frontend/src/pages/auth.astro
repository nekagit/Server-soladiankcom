---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import { authManager } from '../services/auth-manager';

const demoCredentials = {
  email: 'admin@example.com',
  password: 'admin123',
};
---

<Layout title='Sign In to Soladia - Authentication'>
  <Navigation />

  <main class='min-h-screen bg-gray-50'>
    <!-- eBay-style Header -->
    <div class='bg-white border-b border-gray-200'>
      <div class='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4'>
        <div class='flex items-center justify-between'>
          <div class='flex items-center space-x-4'>
            <a href='/' class='text-2xl font-bold text-gray-900'>Soladia</a>
            <span class='text-gray-400'>|</span>
            <h1 class='text-lg font-medium text-gray-900'>
              Sign in or create an account
            </h1>
          </div>
          <div class='text-sm text-gray-600'>
            <a href='/help' class='hover:text-blue-600'>Help</a>
          </div>
        </div>
      </div>
    </div>

    <div class='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8'>
      <div class='grid grid-cols-1 lg:grid-cols-2 gap-8'>
        <!-- Left Column - Sign In -->
        <div class='bg-white rounded-lg shadow-sm border border-gray-200 p-8'>
          <div class='mb-6'>
            <h2 class='text-2xl font-bold text-gray-900 mb-2'>
              Sign in to your account
            </h2>
            <p class='text-gray-600'>
              Welcome back! Please sign in to continue.
            </p>
          </div>

          <!-- Demo Credentials -->
          <div class='bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6'>
            <div class='flex items-start'>
              <div class='flex-shrink-0'>
                <svg
                  class='h-5 w-5 text-blue-400'
                  fill='currentColor'
                  viewBox='0 0 20 20'
                >
                  <path
                    fill-rule='evenodd'
                    d='M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z'
                    clip-rule='evenodd'></path>
                </svg>
              </div>
              <div class='ml-3'>
                <h3 class='text-sm font-medium text-blue-800'>
                  Demo Account Available
                </h3>
                <div class='mt-2 text-sm text-blue-700'>
                  <p><strong>Email:</strong> {demoCredentials.email}</p>
                  <p><strong>Password:</strong> {demoCredentials.password}</p>
                </div>
              </div>
            </div>
          </div>

          <!-- Sign In Form -->
          <form class='space-y-6' id='signin-form'>
            <div>
              <label
                for='signin-email'
                class='block text-sm font-medium text-gray-700 mb-2'
              >
                Email address
              </label>
              <input
                type='email'
                id='signin-email'
                class='w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500'
                placeholder='Enter your email'
                value={demoCredentials.email}
                required
              />
            </div>

            <div>
              <label
                for='signin-password'
                class='block text-sm font-medium text-gray-700 mb-2'
              >
                Password
              </label>
              <div class='relative'>
                <input
                  type='password'
                  id='signin-password'
                  class='w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 pr-10'
                  placeholder='Enter your password'
                  value={demoCredentials.password}
                  required
                />
                <button
                  type='button'
                  class='absolute inset-y-0 right-0 pr-3 flex items-center'
                  id='signin-toggle'
                >
                  <svg
                    class='h-5 w-5 text-gray-400'
                    fill='none'
                    stroke='currentColor'
                    viewBox='0 0 24 24'
                  >
                    <path
                      stroke-linecap='round'
                      stroke-linejoin='round'
                      stroke-width='2'
                      d='M15 12a3 3 0 11-6 0 3 3 0 016 0z'></path>
                    <path
                      stroke-linecap='round'
                      stroke-linejoin='round'
                      stroke-width='2'
                      d='M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z'
                    ></path>
                  </svg>
                </button>
              </div>
            </div>

            <div class='flex items-center justify-between'>
              <div class='flex items-center'>
                <input
                  type='checkbox'
                  id='remember-me'
                  class='h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded'
                />
                <label
                  for='remember-me'
                  class='ml-2 block text-sm text-gray-700'
                >
                  Keep me signed in
                </label>
              </div>
              <a
                href='/forgot-password'
                class='text-sm text-blue-600 hover:text-blue-800'
              >
                Forgot your password?
              </a>
            </div>

            <button
              type='submit'
              class='w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-150 ease-in-out'
            >
              Sign in
            </button>
          </form>
        </div>

        <!-- Right Column - Create Account -->
        <div class='bg-white rounded-lg shadow-sm border border-gray-200 p-8'>
          <div class='mb-6'>
            <h2 class='text-2xl font-bold text-gray-900 mb-2'>
              Create an account
            </h2>
            <p class='text-gray-600'>
              New to Soladia? Create your account to get started.
            </p>
          </div>

          <!-- Sign Up Form -->
          <form class='space-y-6' id='signup-form'>
            <div class='grid grid-cols-1 sm:grid-cols-2 gap-4'>
              <div>
                <label
                  for='signup-firstname'
                  class='block text-sm font-medium text-gray-700 mb-2'
                >
                  First name
                </label>
                <input
                  type='text'
                  id='signup-firstname'
                  class='w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500'
                  placeholder='Enter your first name'
                  required
                />
              </div>
              <div>
                <label
                  for='signup-lastname'
                  class='block text-sm font-medium text-gray-700 mb-2'
                >
                  Last name
                </label>
                <input
                  type='text'
                  id='signup-lastname'
                  class='w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500'
                  placeholder='Enter your last name'
                  required
                />
              </div>
            </div>

            <div>
              <label
                for='signup-email'
                class='block text-sm font-medium text-gray-700 mb-2'
              >
                Email address
              </label>
              <input
                type='email'
                id='signup-email'
                class='w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500'
                placeholder='Enter your email'
                required
              />
            </div>

            <div>
              <label
                for='signup-username'
                class='block text-sm font-medium text-gray-700 mb-2'
              >
                Username
              </label>
              <input
                type='text'
                id='signup-username'
                class='w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500'
                placeholder='Choose a username'
                required
              />
            </div>

            <div>
              <label
                for='signup-password'
                class='block text-sm font-medium text-gray-700 mb-2'
              >
                Password
              </label>
              <div class='relative'>
                <input
                  type='password'
                  id='signup-password'
                  class='w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 pr-10'
                  placeholder='Create a password'
                  required
                />
                <button
                  type='button'
                  class='absolute inset-y-0 right-0 pr-3 flex items-center'
                  id='signup-toggle'
                >
                  <svg
                    class='h-5 w-5 text-gray-400'
                    fill='none'
                    stroke='currentColor'
                    viewBox='0 0 24 24'
                  >
                    <path
                      stroke-linecap='round'
                      stroke-linejoin='round'
                      stroke-width='2'
                      d='M15 12a3 3 0 11-6 0 3 3 0 016 0z'></path>
                    <path
                      stroke-linecap='round'
                      stroke-linejoin='round'
                      stroke-width='2'
                      d='M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z'
                    ></path>
                  </svg>
                </button>
              </div>
            </div>

            <div class='flex items-start'>
              <input
                type='checkbox'
                id='agree-terms'
                class='h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded mt-1'
                required
              />
              <label for='agree-terms' class='ml-2 block text-sm text-gray-700'>
                I agree to the <a
                  href='/terms'
                  class='text-blue-600 hover:text-blue-800'>Terms of Service</a
                > and <a
                  href='/privacy'
                  class='text-blue-600 hover:text-blue-800'>Privacy Policy</a
                >
              </label>
            </div>

            <button
              type='submit'
              class='w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition duration-150 ease-in-out'
            >
              Create account
            </button>
          </form>
        </div>
      </div>

      <!-- Social Login Section -->
      <div
        class='mt-8 bg-white rounded-lg shadow-sm border border-gray-200 p-8'
      >
        <div class='text-center mb-6'>
          <h3 class='text-lg font-medium text-gray-900 mb-2'>
            Or continue with
          </h3>
          <p class='text-sm text-gray-600'>Quick and secure sign-in options</p>
        </div>

        <div class='grid grid-cols-1 sm:grid-cols-2 gap-4'>
          <button
            class='w-full flex justify-center items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-150 ease-in-out'
            id='google-login'
          >
            <svg class='w-5 h-5 mr-2' viewBox='0 0 24 24'>
              <path
                fill='#4285F4'
                d='M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z'
              ></path>
              <path
                fill='#34A853'
                d='M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z'
              ></path>
              <path
                fill='#FBBC05'
                d='M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z'
              ></path>
              <path
                fill='#EA4335'
                d='M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z'
              ></path>
            </svg>
            Google
          </button>
          <button
            class='w-full flex justify-center items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-150 ease-in-out'
            id='github-login'
          >
            <svg class='w-5 h-5 mr-2' fill='currentColor' viewBox='0 0 24 24'>
              <path
                d='M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z'
              ></path>
            </svg>
            GitHub
          </button>
        </div>
      </div>

      <!-- Solana Wallet Section -->
      <div
        class='mt-8 bg-gradient-to-r from-purple-50 to-blue-50 rounded-lg border border-purple-200 p-8'
      >
        <div class='text-center mb-6'>
          <div
            class='mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-purple-100 mb-4'
          >
            <svg
              class='h-6 w-6 text-purple-600'
              fill='none'
              stroke='currentColor'
              viewBox='0 0 24 24'
            >
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z'
              ></path>
            </svg>
          </div>
          <h3 class='text-lg font-medium text-gray-900 mb-2'>
            Connect Solana Wallet
          </h3>
          <p class='text-sm text-gray-600'>
            Use your Solana wallet for seamless payments and NFT transactions
          </p>
        </div>

        <div class='space-y-4'>
          <button
            class='w-full flex justify-center items-center px-4 py-3 border border-purple-300 rounded-md shadow-sm text-sm font-medium text-purple-700 bg-white hover:bg-purple-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 transition duration-150 ease-in-out'
            id='connect-phantom'
          >
            <svg class='w-5 h-5 mr-2' viewBox='0 0 24 24' fill='currentColor'>
              <path
                d='M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm0 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z'
              ></path>
              <path
                d='M12 6c-3.314 0-6 2.686-6 6s2.686 6 6 6 6-2.686 6-6-2.686-6-6-6zm0 10c-2.206 0-4-1.794-4-4s1.794-4 4-4 4 1.794 4 4-1.794 4-4 4z'
              ></path>
            </svg>
            Connect Phantom Wallet
          </button>
        </div>

        <!-- Security Notice -->
        <div class='mt-6 p-4 bg-green-50 border border-green-200 rounded-md'>
          <div class='flex'>
            <div class='flex-shrink-0'>
              <svg
                class='h-5 w-5 text-green-400'
                fill='currentColor'
                viewBox='0 0 20 20'
              >
                <path
                  fill-rule='evenodd'
                  d='M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z'
                  clip-rule='evenodd'></path>
              </svg>
            </div>
            <div class='ml-3'>
              <h4 class='text-sm font-medium text-green-800'>
                🔒 Secure & Private
              </h4>
              <p class='mt-1 text-sm text-green-700'>
                Your data is encrypted and protected. We never store your wallet
                private keys.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Load auth manager
</script>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const signinForm = document.getElementById('signin-form');
    const signupForm = document.getElementById('signup-form');
    const passwordToggles = document.querySelectorAll('[id$="-toggle"]');
    const connectPhantomBtn = document.getElementById('connect-phantom');

    // Password visibility toggle
    passwordToggles.forEach(toggle => {
      toggle.addEventListener('click', () => {
        const input = toggle.parentElement?.querySelector('input');
        if (input) {
          input.type = input.type === 'password' ? 'text' : 'password';
        }
      });
    });

    // Form submissions
    signinForm?.addEventListener('submit', async e => {
      e.preventDefault();
      const formData = new FormData(e.target as HTMLFormElement);
      const email = (
        document.getElementById('signin-email') as HTMLInputElement
      )?.value;
      const password = (
        document.getElementById('signin-password') as HTMLInputElement
      )?.value;

      try {
        console.log('Signing in with:', { email, password });

        const authManager = (window as any).authManager;
        if (!authManager) {
          alert(
            'Authentication system not available. Please refresh the page.'
          );
          return;
        }

        const success = await authManager.login(email, password);

        if (success) {
          const user = authManager.getCurrentUser();
          alert(
            `Welcome back, ${user?.full_name || user?.username}! Login successful.`
          );

          // Redirect to dashboard or home page
          window.location.href = '/';
        } else {
          const authState = authManager.getState();
          alert(`Login failed: ${authState.error || 'Invalid credentials'}`);
        }
      } catch (error) {
        console.error('Login error:', error);
        alert('Login failed. Please check your connection and try again.');
      }
    });

    signupForm?.addEventListener('submit', async e => {
      e.preventDefault();
      const userData = {
        email: (document.getElementById('signup-email') as HTMLInputElement)
          ?.value,
        username: (
          document.getElementById('signup-username') as HTMLInputElement
        )?.value,
        first_name: (
          document.getElementById('signup-firstname') as HTMLInputElement
        )?.value,
        last_name: (
          document.getElementById('signup-lastname') as HTMLInputElement
        )?.value,
        password: (
          document.getElementById('signup-password') as HTMLInputElement
        )?.value,
      };

      try {
        console.log('Signing up with:', userData);

        const response = await fetch('http://localhost:8000/api/users/', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            wallet_address: 'demo-wallet-address', // For demo purposes
            username: userData.username,
            email: userData.email,
            full_name: `${userData.first_name} ${userData.last_name}`,
            user_type: 'both',
          }),
        });

        if (response.ok) {
          const data = await response.json();
          console.log('Registration successful:', data);
          alert(
            `Welcome to Soladia, ${userData.first_name}! Registration successful.`
          );

          // Auto-fill the login form
          (document.getElementById('signin-email') as HTMLInputElement).value =
            userData.email;
          (
            document.getElementById('signin-password') as HTMLInputElement
          ).value = userData.password;
        } else {
          const errorData = await response.json();
          alert(
            `Registration failed: ${errorData.detail || 'Please try again'}`
          );
        }
      } catch (error) {
        console.error('Registration error:', error);
        alert(
          'Registration failed. Please check your connection and try again.'
        );
      }
    });

    // Phantom wallet connection
    connectPhantomBtn?.addEventListener('click', async () => {
      try {
        if (typeof window !== 'undefined' && window.solana?.isPhantom) {
          const response = await window.solana.connect();
          console.log('Connected to Phantom:', response.publicKey.toString());
          alert(
            `Connected to Phantom wallet: ${response.publicKey.toString().slice(0, 8)}...`
          );
        } else {
          alert('Phantom wallet not found. Please install Phantom wallet.');
        }
      } catch (error) {
        console.error('Failed to connect wallet:', error);
        alert('Failed to connect wallet. Please try again.');
      }
    });

    // Social login buttons
    document.getElementById('google-login')?.addEventListener('click', () => {
      alert('Google login will be implemented with OAuth');
    });

    document.getElementById('github-login')?.addEventListener('click', () => {
      alert('GitHub login will be implemented with OAuth');
    });
  });
</script>
