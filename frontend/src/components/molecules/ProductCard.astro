---
import Button from '../atoms/Button.astro';
import Card from '../atoms/Card.astro';

export interface Props {
  id: string;
  title: string;
  price: number;
  image?: string;
  imageAlt?: string;
  description?: string;
  category?: string;
  rating?: number;
  reviewCount?: number;
  inStock?: boolean;
  onSale?: boolean;
  salePrice?: number;
  className?: string;
  'data-testid'?: string;
}

const {
  id,
  title,
  price,
  image,
  imageAlt = title,
  description = '',
  category = '',
  rating = 0,
  reviewCount = 0,
  inStock = true,
  onSale = false,
  salePrice,
  className = '',
  'data-testid': testId,
} = Astro.props;

const displayPrice = onSale && salePrice ? salePrice : price;
const originalPrice = onSale ? price : null;
---

<Card
  variant='default'
  padding='none'
  hover={true}
  clickable={true}
  className={`group overflow-hidden ${className}`}
  data-testid={testId}
>
  <a href={`/products/${id}`} class='block'>
    <!-- Product Image -->
    <div class='aspect-w-16 aspect-h-12 bg-gray-200 overflow-hidden'>
      {
        image ? (
          <img
            src={image}
            alt={imageAlt}
            class='w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300'
            loading='lazy'
          />
        ) : (
          <div class='w-full h-48 bg-gray-200 flex items-center justify-center'>
            <svg
              class='w-12 h-12 text-gray-400'
              fill='none'
              stroke='currentColor'
              viewBox='0 0 24 24'
            >
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z'
              />
            </svg>
          </div>
        )
      }

      <!-- Sale Badge -->
      {
        onSale && (
          <div class='absolute top-2 left-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded'>
            SALE
          </div>
        )
      }

      <!-- Stock Status -->
      {
        !inStock && (
          <div class='absolute top-2 right-2 bg-gray-500 text-white text-xs font-bold px-2 py-1 rounded'>
            OUT OF STOCK
          </div>
        )
      }
    </div>

    <!-- Product Info -->
    <div class='p-4'>
      {
        category && (
          <p class='text-xs text-gray-500 uppercase tracking-wide mb-1'>
            {category}
          </p>
        )
      }

      <h3
        class='text-lg font-semibold text-gray-900 mb-2 line-clamp-2 group-hover:text-soladia-primary transition-colors'
      >
        {title}
      </h3>

      {
        description && (
          <p class='text-sm text-gray-600 mb-3 line-clamp-2'>{description}</p>
        )
      }

      <!-- Rating -->
      {
        rating > 0 && (
          <div class='flex items-center mb-3'>
            <div class='flex items-center'>
              {[...Array(5)].map((_, i) => (
                <svg
                  key={i}
                  class={`w-4 h-4 ${i < Math.floor(rating) ? 'text-yellow-400' : 'text-gray-300'}`}
                  fill='currentColor'
                  viewBox='0 0 20 20'
                >
                  <path d='M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z' />
                </svg>
              ))}
            </div>
            <span class='ml-2 text-sm text-gray-600'>({reviewCount})</span>
          </div>
        )
      }

      <!-- Price -->
      <div class='flex items-center justify-between'>
        <div class='flex items-center space-x-2'>
          <span class='text-xl font-bold text-gray-900'
            >${displayPrice.toFixed(2)}</span
          >
          {
            originalPrice && (
              <span class='text-sm text-gray-500 line-through'>
                ${originalPrice.toFixed(2)}
              </span>
            )
          }
        </div>

        <Button
          variant='primary'
          size='sm'
          disabled={!inStock}
          className='opacity-0 group-hover:opacity-100 transition-opacity duration-200'
        >
          {inStock ? 'Add to Cart' : 'Out of Stock'}
        </Button>
      </div>
    </div>
  </a>
</Card>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .aspect-w-16 {
    position: relative;
    padding-bottom: 75%; /* 16:12 aspect ratio */
  }

  .aspect-w-16 > * {
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
</style>
