---
export interface Props {
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'danger';
  size?: 'sm' | 'md' | 'lg' | 'xl';
  disabled?: boolean;
  loading?: boolean;
  fullWidth?: boolean;
  type?: 'button' | 'submit' | 'reset';
  href?: string;
  target?: string;
  className?: string;
  onClick?: string;
  'data-testid'?: string;
}

const {
  variant = 'primary',
  size = 'md',
  disabled = false,
  loading = false,
  fullWidth = false,
  type = 'button',
  href,
  target,
  className = '',
  onClick,
  'data-testid': testId,
} = Astro.props;

const baseClasses =
  'inline-flex items-center justify-center font-medium rounded-md transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';
const variantClasses = {
  primary:
    'bg-soladia-primary text-white hover:bg-red-700 focus:ring-red-500 shadow-sm hover:shadow-md',
  secondary:
    'bg-soladia-secondary text-white hover:bg-blue-700 focus:ring-blue-500 shadow-sm hover:shadow-md',
  outline:
    'border-2 border-soladia-primary text-soladia-primary hover:bg-soladia-primary hover:text-white focus:ring-red-500',
  ghost: 'text-soladia-primary hover:bg-red-50 focus:ring-red-500',
  danger:
    'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500 shadow-sm hover:shadow-md',
};
const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-sm',
  lg: 'px-6 py-3 text-base',
  xl: 'px-8 py-4 text-lg',
};
const widthClasses = fullWidth ? 'w-full' : '';

const buttonClasses =
  `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${widthClasses} ${className}`.trim();

const Tag = href ? 'a' : 'button';
const tagProps = href ? { href, target } : { type };
---

<Tag
  class={buttonClasses}
  disabled={disabled}
  data-testid={testId}
  {...tagProps}
  {...onClick && { onclick: onClick }}
>
  {
    loading && (
      <svg
        class='animate-spin -ml-1 mr-2 h-4 w-4'
        fill='none'
        viewBox='0 0 24 24'
      >
        <circle
          class='opacity-25'
          cx='12'
          cy='12'
          r='10'
          stroke='currentColor'
          stroke-width='4'
        />
        <path
          class='opacity-75'
          fill='currentColor'
          d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'
        />
      </svg>
    )
  }
  <slot />
</Tag>

<style>
  .animate-spin {
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
</style>
