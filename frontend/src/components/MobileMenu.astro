---
// Mobile Menu Component for responsive navigation
---

<div class='mobile-menu' id='mobile-menu'>
  <div class='mobile-menu-overlay' id='mobile-menu-overlay'></div>
  <div class='mobile-menu-content'>
    <!-- Mobile Menu Header -->
    <div class='mobile-menu-header'>
      <div class='mobile-logo'>
        <div class='soladia-logo-icon'>
          <span>S</span>
        </div>
        <span class='soladia-logo-text'>Soladia</span>
      </div>
      <button
        class='mobile-menu-close'
        id='mobile-menu-close'
        aria-label='Close menu'
      >
        <svg
          width='24'
          height='24'
          viewBox='0 0 24 24'
          fill='none'
          stroke='currentColor'
          stroke-width='2'
        >
          <line x1='18' y1='6' x2='6' y2='18'></line>
          <line x1='6' y1='6' x2='18' y2='18'></line>
        </svg>
      </button>
    </div>

    <!-- Mobile Search -->
    <div class='mobile-search'>
      <div class='relative'>
        <input
          type='text'
          placeholder='Search for anything...'
          class='mobile-search-input'
          id='mobile-search-input'
        />
        <button class='mobile-search-button' id='mobile-search-button'>
          <svg
            class='w-5 h-5'
            fill='none'
            stroke='currentColor'
            viewBox='0 0 24 24'
          >
            <path
              stroke-linecap='round'
              stroke-linejoin='round'
              stroke-width='2'
              d='M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z'></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation Links -->
    <nav class='mobile-nav'>
      <ul class='mobile-nav-list'>
        <li><a href='/' class='mobile-nav-link'>Home</a></li>
        <li><a href='/products' class='mobile-nav-link'>Products</a></li>
        <li><a href='/categories' class='mobile-nav-link'>Categories</a></li>
        <li><a href='/nft' class='mobile-nav-link'>NFTs</a></li>
        <li><a href='/sell' class='mobile-nav-link'>Sell</a></li>
        <li><a href='/deals' class='mobile-nav-link'>Deals</a></li>
        <li><a href='/help' class='mobile-nav-link'>Help</a></li>
      </ul>
    </nav>

    <!-- Mobile User Actions -->
    <div class='mobile-user-actions' id='mobile-user-actions'>
      <!-- Unauthenticated state -->
      <div class='mobile-auth-links' id='mobile-auth-links'>
        <a href='/auth' class='mobile-auth-link'>Sign In</a>
        <a href='/auth' class='mobile-register-btn'>Register</a>
      </div>

      <!-- Authenticated state -->
      <div
        class='mobile-user-menu'
        id='mobile-user-menu'
        style='display: none;'
      >
        <div class='mobile-user-info'>
          <div class='mobile-user-avatar'>
            <span id='mobile-user-avatar-text'>A</span>
          </div>
          <div class='mobile-user-details'>
            <div class='mobile-user-name' id='mobile-user-name'>Admin</div>
            <div class='mobile-user-email' id='mobile-user-email'>
              admin@soladia.com
            </div>
          </div>
        </div>
        <div class='mobile-user-links'>
          <a href='/profile' class='mobile-user-link'>
            <svg
              width='16'
              height='16'
              viewBox='0 0 24 24'
              fill='none'
              stroke='currentColor'
              stroke-width='2'
            >
              <path d='M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2'></path>
              <circle cx='12' cy='7' r='4'></circle>
            </svg>
            Profile
          </a>
          <a href='/dashboard' class='mobile-user-link'>
            <svg
              width='16'
              height='16'
              viewBox='0 0 24 24'
              fill='none'
              stroke='currentColor'
              stroke-width='2'
            >
              <rect x='3' y='3' width='7' height='7'></rect>
              <rect x='14' y='3' width='7' height='7'></rect>
              <rect x='14' y='14' width='7' height='7'></rect>
              <rect x='3' y='14' width='7' height='7'></rect>
            </svg>
            Dashboard
          </a>
          <a href='/orders' class='mobile-user-link'>
            <svg
              width='16'
              height='16'
              viewBox='0 0 24 24'
              fill='none'
              stroke='currentColor'
              stroke-width='2'
            >
              <path d='M16 11V7a4 4 0 0 0-8 0v4'></path>
              <rect x='3' y='9' width='18' height='11' rx='2' ry='2'></rect>
            </svg>
            Orders
          </a>
          <button class='mobile-user-link logout-btn' id='mobile-logout-btn'>
            <svg
              width='16'
              height='16'
              viewBox='0 0 24 24'
              fill='none'
              stroke='currentColor'
              stroke-width='2'
            >
              <path d='M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4'></path>
              <polyline points='16,17 21,12 16,7'></polyline>
              <line x1='21' y1='12' x2='9' y2='12'></line>
            </svg>
            Sign Out
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Mobile Menu Trigger -->
<button
  class='mobile-menu-trigger'
  id='mobile-menu-trigger'
  aria-label='Open menu'
>
  <svg
    width='24'
    height='24'
    viewBox='0 0 24 24'
    fill='none'
    stroke='currentColor'
    stroke-width='2'
  >
    <line x1='3' y1='6' x2='21' y2='6'></line>
    <line x1='3' y1='12' x2='21' y2='12'></line>
    <line x1='3' y1='18' x2='21' y2='18'></line>
  </svg>
</button>

<style>
  /* Mobile Menu Styles */
  .mobile-menu {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999;
    display: none;
  }

  .mobile-menu.active {
    display: block;
  }

  .mobile-menu-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
  }

  .mobile-menu-content {
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    max-width: 320px;
    height: 100%;
    background: white;
    box-shadow: -4px 0 20px rgba(0, 0, 0, 0.1);
    transform: translateX(100%);
    transition: transform 0.3s ease;
    overflow-y: auto;
  }

  .mobile-menu.active .mobile-menu-content {
    transform: translateX(0);
  }

  .mobile-menu-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
    border-bottom: 1px solid #e1e5e9;
    min-height: 60px;
  }

  .mobile-logo {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .mobile-menu-close {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.5rem;
    transition: background-color 0.2s ease;
    min-width: 44px;
    min-height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .mobile-menu-close:hover {
    background: #f3f4f6;
  }

  .mobile-search {
    padding: 1rem;
    border-bottom: 1px solid #e1e5e9;
  }

  .mobile-search-input {
    width: 100%;
    padding: 0.75rem 1rem;
    border: 2px solid #e1e5e9;
    border-radius: 0.5rem;
    font-size: 16px; /* Prevents zoom on iOS */
    transition: border-color 0.2s ease;
    min-height: 44px;
  }

  .mobile-search-input:focus {
    outline: none;
    border-color: #3b82f6;
  }

  .mobile-nav {
    padding: 1rem 0;
  }

  .mobile-nav-list {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .mobile-nav-link {
    display: block;
    padding: 1rem 1.5rem;
    color: #374151;
    text-decoration: none;
    font-weight: 500;
    transition:
      background-color 0.2s ease,
      color 0.2s ease;
    min-height: 44px;
    display: flex;
    align-items: center;
  }

  .mobile-nav-link:hover {
    background: #f3f4f6;
    color: #1f2937;
  }

  .mobile-user-actions {
    padding: 1rem;
    border-top: 1px solid #e1e5e9;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .mobile-auth-link {
    display: block;
    padding: 0.75rem 1rem;
    text-align: center;
    color: #6b7280;
    text-decoration: none;
    font-weight: 500;
    border: 1px solid #e1e5e9;
    border-radius: 0.5rem;
    transition: all 0.2s ease;
    min-height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .mobile-auth-link:hover {
    background: #f3f4f6;
    color: #374151;
  }

  .mobile-register-btn {
    display: block;
    padding: 0.75rem 1rem;
    text-align: center;
    background: linear-gradient(135deg, #e60012 0%, #0066cc 100%);
    color: white;
    text-decoration: none;
    font-weight: 600;
    border-radius: 0.5rem;
    transition:
      transform 0.2s ease,
      box-shadow 0.2s ease;
    min-height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .mobile-register-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(230, 0, 18, 0.3);
  }

  /* Mobile User Menu Styles */
  .mobile-user-info {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem;
    border-bottom: 1px solid #e1e5e9;
  }

  .mobile-user-avatar {
    width: 3rem;
    height: 3rem;
    background: linear-gradient(135deg, #e60012 0%, #0066cc 100%);
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.125rem;
    font-weight: 500;
  }

  .mobile-user-details {
    flex: 1;
  }

  .mobile-user-name {
    font-size: 1.125rem;
    font-weight: 600;
    color: #1f2937;
    margin-bottom: 0.25rem;
  }

  .mobile-user-email {
    font-size: 0.875rem;
    color: #6b7280;
  }

  .mobile-user-links {
    padding: 0.5rem 0;
  }

  .mobile-user-link {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1rem;
    color: #374151;
    text-decoration: none;
    font-weight: 500;
    transition:
      background-color 0.2s ease,
      color 0.2s ease;
    min-height: 44px;
    border: none;
    background: none;
    width: 100%;
    text-align: left;
    cursor: pointer;
  }

  .mobile-user-link:hover {
    background: #f3f4f6;
    color: #1f2937;
  }

  .mobile-user-link.logout-btn {
    color: #dc2626;
  }

  .mobile-user-link.logout-btn:hover {
    background: #fef2f2;
    color: #b91c1c;
  }

  .mobile-menu-trigger {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.5rem;
    transition: background-color 0.2s ease;
  }

  .mobile-menu-trigger:hover {
    background: #f3f4f6;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .mobile-menu-trigger {
      display: block;
    }
  }

  @media (max-width: 480px) {
    .mobile-menu-content {
      width: 100%;
    }
  }
</style>

<script>
  // Mobile Menu Functionality
  class MobileMenu {
    menu;
    trigger;
    close;
    overlay;
    searchInput;
    searchButton;
    mobileAuthLinks;
    mobileUserMenu;
    mobileUserName;
    mobileUserEmail;
    mobileUserAvatarText;
    mobileLogoutBtn;

    constructor() {
      this.menu = document.getElementById('mobile-menu');
      this.trigger = document.getElementById('mobile-menu-trigger');
      this.close = document.getElementById('mobile-menu-close');
      this.overlay = document.getElementById('mobile-menu-overlay');
      this.searchInput = document.getElementById('mobile-search-input');
      this.searchButton = document.getElementById('mobile-search-button');
      this.mobileAuthLinks = document.getElementById('mobile-auth-links');
      this.mobileUserMenu = document.getElementById('mobile-user-menu');
      this.mobileUserName = document.getElementById('mobile-user-name');
      this.mobileUserEmail = document.getElementById('mobile-user-email');
      this.mobileUserAvatarText = document.getElementById(
        'mobile-user-avatar-text'
      );
      this.mobileLogoutBtn = document.getElementById('mobile-logout-btn');

      this.init();
    }

    init() {
      if (this.trigger) {
        this.trigger.addEventListener('click', () => this.open());
      }

      if (this.close) {
        this.close.addEventListener('click', () => this.closeMenu());
      }

      if (this.overlay) {
        this.overlay.addEventListener('click', () => this.closeMenu());
      }

      if (this.searchButton) {
        this.searchButton.addEventListener('click', () => this.handleSearch());
      }

      if (this.searchInput) {
        this.searchInput.addEventListener('keypress', (e: KeyboardEvent) => {
          if (e.key === 'Enter') {
            this.handleSearch();
          }
        });
      }

      // Close menu on escape key
      document.addEventListener('keydown', (e: KeyboardEvent) => {
        if (e.key === 'Escape' && this.menu?.classList.contains('active')) {
          this.closeMenu();
        }
      });

      // Close menu on window resize
      window.addEventListener('resize', () => {
        if (
          window.innerWidth > 768 &&
          this.menu?.classList.contains('active')
        ) {
          this.closeMenu();
        }
      });

      // Logout functionality
      if (this.mobileLogoutBtn) {
        this.mobileLogoutBtn.addEventListener('click', () =>
          this.handleLogout()
        );
      }

      // Listen for auth state changes
      window.addEventListener('authStateChanged', () => this.checkAuthState());
      window.addEventListener('storage', e => {
        if (e.key === 'auth_token' || e.key === 'user_data') {
          this.checkAuthState();
        }
      });

      // Initialize auth state
      this.checkAuthState();
    }

    open() {
      if (this.menu) {
        this.menu.classList.add('active');
        document.body.style.overflow = 'hidden';
      }
    }

    closeMenu() {
      if (this.menu) {
        this.menu.classList.remove('active');
        document.body.style.overflow = '';
      }
    }

    handleSearch() {
      const query = (this.searchInput as HTMLInputElement)?.value.trim();
      if (query) {
        window.location.href = `/search?q=${encodeURIComponent(query)}`;
      }
    }

    async checkAuthState() {
      try {
        const token = localStorage.getItem('auth_token');
        const userData = localStorage.getItem('user_data');

        if (token && userData) {
          // Verify token is still valid
          const response = await fetch('/api/auth/profile', {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          });

          if (response.ok) {
            const user = JSON.parse(userData);
            this.showAuthenticatedUI(user);
          } else {
            // Token is invalid, clear storage
            localStorage.removeItem('auth_token');
            localStorage.removeItem('user_data');
            this.showUnauthenticatedUI();
          }
        } else {
          this.showUnauthenticatedUI();
        }
      } catch (error) {
        console.error('Auth check failed:', error);
        this.showUnauthenticatedUI();
      }
    }

    showAuthenticatedUI(user: any) {
      if (this.mobileAuthLinks) this.mobileAuthLinks.style.display = 'none';
      if (this.mobileUserMenu) this.mobileUserMenu.style.display = 'block';

      // Update user info
      if (this.mobileUserName) {
        this.mobileUserName.textContent =
          user.full_name || user.username || 'User';
      }
      if (this.mobileUserEmail) {
        this.mobileUserEmail.textContent = user.email || 'user@example.com';
      }
      if (this.mobileUserAvatarText) {
        const name = user.full_name || user.username || 'User';
        this.mobileUserAvatarText.textContent = name.charAt(0).toUpperCase();
      }
    }

    showUnauthenticatedUI() {
      if (this.mobileAuthLinks) this.mobileAuthLinks.style.display = 'flex';
      if (this.mobileUserMenu) this.mobileUserMenu.style.display = 'none';
    }

    async handleLogout() {
      try {
        // Call logout API
        const token = localStorage.getItem('auth_token');
        if (token) {
          await fetch('/api/auth/logout', {
            method: 'POST',
            headers: {
              Authorization: `Bearer ${token}`,
              'Content-Type': 'application/json',
            },
          });
        }
      } catch (error) {
        console.error('Logout API call failed:', error);
      } finally {
        // Clear local storage and update UI
        localStorage.removeItem('auth_token');
        localStorage.removeItem('user_data');
        this.showUnauthenticatedUI();

        // Close mobile menu
        this.closeMenu();

        // Redirect to home page
        window.location.href = '/';
      }
    }
  }

  // Initialize mobile menu when DOM is ready
  if (typeof document !== 'undefined') {
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', () => new MobileMenu());
    } else {
      new MobileMenu();
    }
  }
</script>
