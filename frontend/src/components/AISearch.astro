---
// AI-Powered Search Component
---

<div id='ai-search-container' class='relative w-full max-w-2xl mx-auto'>
  <!-- Search Input -->
  <div class='relative'>
    <div
      class='absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none'
    >
      <svg
        class='h-5 w-5 text-gray-400'
        fill='none'
        stroke='currentColor'
        viewBox='0 0 24 24'
      >
        <path
          stroke-linecap='round'
          stroke-linejoin='round'
          stroke-width='2'
          d='M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z'></path>
      </svg>
    </div>
    <input
      id='ai-search-input'
      type='text'
      placeholder="Search with AI... (e.g., 'vintage camera', 'digital art NFT')"
      class='block w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-soladia-primary focus:border-soladia-primary text-lg'
      autocomplete='off'
    />
    <div class='absolute inset-y-0 right-0 flex items-center'>
      <button
        id='ai-search-clear'
        class='hidden p-2 text-gray-400 hover:text-gray-600'
        aria-label='Clear search'
      >
        <svg
          class='h-5 w-5'
          fill='none'
          stroke='currentColor'
          viewBox='0 0 24 24'
        >
          <path
            stroke-linecap='round'
            stroke-linejoin='round'
            stroke-width='2'
            d='M6 18L18 6M6 6l12 12'></path>
        </svg>
      </button>
    </div>
  </div>

  <!-- AI Search Suggestions -->
  <div
    id='ai-suggestions'
    class='hidden absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-96 overflow-y-auto'
  >
    <div class='p-4'>
      <div class='flex items-center space-x-2 mb-3'>
        <div class='w-2 h-2 bg-blue-500 rounded-full animate-pulse'></div>
        <span class='text-sm font-medium text-gray-700'>AI Suggestions</span>
      </div>
      <div id='suggestions-list' class='space-y-1'>
        <!-- Suggestions will be populated here -->
      </div>
    </div>
  </div>

  <!-- Search Filters -->
  <div id='search-filters' class='hidden mt-4 p-4 bg-gray-50 rounded-lg'>
    <div class='flex flex-wrap gap-4'>
      <div class='flex-1 min-w-0'>
        <label class='block text-sm font-medium text-gray-700 mb-1'
          >Category</label
        >
        <select
          id='filter-category'
          class='w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-soladia-primary focus:border-soladia-primary'
        >
          <option value=''>All Categories</option>
          <option value='Photography'>Photography</option>
          <option value='Digital Art'>Digital Art</option>
          <option value='Electronics'>Electronics</option>
          <option value='Collectibles'>Collectibles</option>
          <option value='Accessories'>Accessories</option>
        </select>
      </div>

      <div class='flex-1 min-w-0'>
        <label class='block text-sm font-medium text-gray-700 mb-1'>Type</label>
        <select
          id='filter-type'
          class='w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-soladia-primary focus:border-soladia-primary'
        >
          <option value=''>All Types</option>
          <option value='product'>Products</option>
          <option value='nft'>NFTs</option>
          <option value='user'>Users</option>
          <option value='collection'>Collections</option>
        </select>
      </div>

      <div class='flex-1 min-w-0'>
        <label class='block text-sm font-medium text-gray-700 mb-1'
          >Price Range</label
        >
        <div class='flex space-x-2'>
          <input
            id='filter-price-min'
            type='number'
            placeholder='Min'
            class='w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-soladia-primary focus:border-soladia-primary'
          />
          <input
            id='filter-price-max'
            type='number'
            placeholder='Max'
            class='w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-soladia-primary focus:border-soladia-primary'
          />
        </div>
      </div>

      <div class='flex items-end'>
        <button
          id='apply-filters'
          class='px-4 py-2 bg-soladia-primary text-white rounded-md hover:bg-red-700 focus:ring-2 focus:ring-soladia-primary focus:ring-offset-2'
        >
          Apply Filters
        </button>
      </div>
    </div>
  </div>

  <!-- Trending Searches -->
  <div id='trending-searches' class='hidden mt-4'>
    <div class='flex items-center space-x-2 mb-2'>
      <svg
        class='w-4 h-4 text-gray-500'
        fill='none'
        stroke='currentColor'
        viewBox='0 0 24 24'
      >
        <path
          stroke-linecap='round'
          stroke-linejoin='round'
          stroke-width='2'
          d='M13 7h8m0 0v8m0-8l-8 8-4-4-6 6'></path>
      </svg>
      <span class='text-sm font-medium text-gray-700'>Trending Searches</span>
    </div>
    <div id='trending-list' class='flex flex-wrap gap-2'>
      <!-- Trending searches will be populated here -->
    </div>
  </div>

  <!-- Popular Categories -->
  <div id='popular-categories' class='hidden mt-4'>
    <div class='flex items-center space-x-2 mb-2'>
      <svg
        class='w-4 h-4 text-gray-500'
        fill='none'
        stroke='currentColor'
        viewBox='0 0 24 24'
      >
        <path
          stroke-linecap='round'
          stroke-linejoin='round'
          stroke-width='2'
          d='M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z'
        ></path>
      </svg>
      <span class='text-sm font-medium text-gray-700'>Popular Categories</span>
    </div>
    <div id='categories-list' class='flex flex-wrap gap-2'>
      <!-- Categories will be populated here -->
    </div>
  </div>
</div>

<!-- Search Results -->
<div id='search-results' class='hidden mt-6'>
  <div class='flex items-center justify-between mb-4'>
    <h3 class='text-lg font-semibold text-gray-900'>Search Results</h3>
    <div class='flex items-center space-x-2'>
      <span class='text-sm text-gray-500'>Sort by:</span>
      <select
        id='sort-results'
        class='px-3 py-1 border border-gray-300 rounded-md focus:ring-soladia-primary focus:border-soladia-primary'
      >
        <option value='relevance'>Relevance</option>
        <option value='price'>Price</option>
        <option value='date'>Date</option>
        <option value='rating'>Rating</option>
      </select>
    </div>
  </div>
  <div
    id='results-list'
    class='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6'
  >
    <!-- Search results will be populated here -->
  </div>
</div>

<!-- AI Recommendations -->
<div id='ai-recommendations' class='hidden mt-8'>
  <div class='flex items-center space-x-2 mb-4'>
    <div class='w-2 h-2 bg-blue-500 rounded-full animate-pulse'></div>
    <h3 class='text-lg font-semibold text-gray-900'>AI Recommendations</h3>
    <span class='text-sm text-gray-500'>Powered by machine learning</span>
  </div>
  <div
    id='recommendations-list'
    class='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6'
  >
    <!-- Recommendations will be populated here -->
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const aiSearchService = (window as any).aiSearchService;
    if (!aiSearchService) {
      console.error('AI Search service not available');
      return;
    }

    const searchInput = document.getElementById('ai-search-input');
    const suggestionsContainer = document.getElementById('ai-suggestions');
    const suggestionsList = document.getElementById('suggestions-list');
    const clearButton = document.getElementById('ai-search-clear');
    const searchFilters = document.getElementById('search-filters');
    const searchResults = document.getElementById('search-results');
    const resultsList = document.getElementById('results-list');
    const trendingSearches = document.getElementById('trending-searches');
    const trendingList = document.getElementById('trending-list');
    const popularCategories = document.getElementById('popular-categories');
    const categoriesList = document.getElementById('categories-list');
    const aiRecommendations = document.getElementById('ai-recommendations');
    const recommendationsList = document.getElementById('recommendations-list');

    let currentQuery = '';
    let currentFilters = {};
    let searchTimeout: NodeJS.Timeout;

    // Initialize trending searches and categories
    loadTrendingSearches();
    loadPopularCategories();

    // Search input event handlers
    searchInput?.addEventListener('input', e => {
      const query = (e.target as HTMLInputElement).value;
      currentQuery = query;

      if (query.length > 0) {
        clearButton?.classList.remove('hidden');
        showSuggestions(query);
      } else {
        clearButton?.classList.add('hidden');
        hideSuggestions();
        hideSearchResults();
        showTrendingAndCategories();
      }
    });

    searchInput?.addEventListener('keydown', e => {
      if (e.key === 'Enter') {
        e.preventDefault();
        performSearch();
      } else if (e.key === 'Escape') {
        hideSuggestions();
      }
    });

    searchInput?.addEventListener('focus', () => {
      if (currentQuery.length > 0) {
        showSuggestions(currentQuery);
      } else {
        showTrendingAndCategories();
      }
    });

    // Clear button
    clearButton?.addEventListener('click', () => {
      (searchInput as HTMLInputElement).value = '';
      currentQuery = '';
      clearButton.classList.add('hidden');
      hideSuggestions();
      hideSearchResults();
      showTrendingAndCategories();
    });

    // Filter controls
    document.getElementById('apply-filters')?.addEventListener('click', () => {
      applyFilters();
    });

    // Sort results
    document.getElementById('sort-results')?.addEventListener('change', e => {
      const sortBy = (e.target as HTMLSelectElement).value;
      if (currentQuery) {
        performSearch({ ...currentFilters, sortBy });
      }
    });

    async function showSuggestions(query: string) {
      if (query.length < 2) return;

      try {
        const suggestions = aiSearchService.getSearchSuggestions(query);
        displaySuggestions(suggestions);
        suggestionsContainer?.classList.remove('hidden');
      } catch (error) {
        console.error('Failed to get suggestions:', error);
      }
    }

    function displaySuggestions(suggestions: string[]) {
      if (!suggestionsList) return;

      suggestionsList.innerHTML = suggestions
        .map(
          suggestion => `
        <button
          class="w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-md"
          onclick="selectSuggestion('${suggestion}')"
        >
          <div class="flex items-center space-x-2">
            <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
            <span>${suggestion}</span>
          </div>
        </button>
      `
        )
        .join('');
    }

    function selectSuggestion(suggestion: string) {
      (searchInput as HTMLInputElement).value = suggestion;
      currentQuery = suggestion;
      hideSuggestions();
      performSearch();
    }

    function hideSuggestions() {
      suggestionsContainer?.classList.add('hidden');
    }

    async function performSearch(filters = {}) {
      if (!currentQuery.trim()) return;

      try {
        // Show loading state
        showLoadingState();

        const results = await aiSearchService.search(currentQuery, filters);
        displaySearchResults(results);

        // Show filters and results
        searchFilters?.classList.remove('hidden');
        searchResults?.classList.remove('hidden');
        trendingSearches?.classList.add('hidden');
        popularCategories?.classList.add('hidden');

        // Load recommendations
        loadRecommendations();
      } catch (error) {
        console.error('Search failed:', error);
        showErrorState();
      }
    }

    function displaySearchResults(results: any[]) {
      if (!resultsList) return;

      if (results.length === 0) {
        resultsList.innerHTML = `
          <div class="col-span-full text-center py-12">
            <svg class="w-12 h-12 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
            <h3 class="text-lg font-medium text-gray-900 mb-2">No results found</h3>
            <p class="text-gray-500">Try adjusting your search terms or filters</p>
          </div>
        `;
        return;
      }

      resultsList.innerHTML = results
        .map(
          result => `
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden hover:shadow-md transition-shadow">
          <div class="aspect-w-16 aspect-h-9">
            <img
              src="${result.imageUrl}"
              alt="${result.title}"
              class="w-full h-48 object-cover"
              loading="lazy"
            />
          </div>
          <div class="p-4">
            <div class="flex items-center justify-between mb-2">
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                ${result.type.toUpperCase()}
              </span>
              <span class="text-sm text-gray-500">${(result.relevanceScore * 100).toFixed(0)}% match</span>
            </div>
            <h3 class="text-lg font-semibold text-gray-900 mb-2">${result.title}</h3>
            <p class="text-sm text-gray-600 mb-3">${result.description}</p>
            <div class="flex items-center justify-between">
              <span class="text-xl font-bold text-gray-900">$${result.price.toFixed(2)}</span>
              <button class="px-4 py-2 bg-soladia-primary text-white rounded-md hover:bg-red-700">
                View Details
              </button>
            </div>
          </div>
        </div>
      `
        )
        .join('');
    }

    async function loadRecommendations() {
      try {
        const recommendations = await aiSearchService.getRecommendations();
        displayRecommendations(recommendations);
        aiRecommendations?.classList.remove('hidden');
      } catch (error) {
        console.error('Failed to load recommendations:', error);
      }
    }

    function displayRecommendations(recommendations: any[]) {
      if (!recommendationsList) return;

      recommendationsList.innerHTML = recommendations
        .map(
          rec => `
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden hover:shadow-md transition-shadow">
          <div class="aspect-w-16 aspect-h-9">
            <img
              src="${rec.imageUrl}"
              alt="${rec.title}"
              class="w-full h-48 object-cover"
              loading="lazy"
            />
          </div>
          <div class="p-4">
            <div class="flex items-center justify-between mb-2">
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                AI RECOMMENDED
              </span>
              <span class="text-sm text-gray-500">${(rec.confidence * 100).toFixed(0)}% confidence</span>
            </div>
            <h3 class="text-lg font-semibold text-gray-900 mb-2">${rec.title}</h3>
            <p class="text-sm text-gray-600 mb-2">${rec.description}</p>
            <p class="text-xs text-blue-600 mb-3">${rec.reason}</p>
            <div class="flex items-center justify-between">
              <span class="text-xl font-bold text-gray-900">$${rec.price.toFixed(2)}</span>
              <button class="px-4 py-2 bg-soladia-primary text-white rounded-md hover:bg-red-700">
                View Details
              </button>
            </div>
          </div>
        </div>
      `
        )
        .join('');
    }

    function loadTrendingSearches() {
      const trending = aiSearchService.getTrendingSearches();
      if (trendingList) {
        trendingList.innerHTML = trending
          .map(
            term => `
          <button
            class="px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded-full hover:bg-gray-200 transition-colors"
            onclick="searchTrending('${term}')"
          >
            ${term}
          </button>
        `
          )
          .join('');
      }
    }

    function loadPopularCategories() {
      const categories = aiSearchService.getPopularCategories();
      if (categoriesList) {
        categoriesList.innerHTML = categories
          .map(
            cat => `
          <button
            class="px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded-full hover:bg-blue-200 transition-colors"
            onclick="searchCategory('${cat.name}')"
          >
            ${cat.name} (${cat.count})
          </button>
        `
          )
          .join('');
      }
    }

    function showTrendingAndCategories() {
      trendingSearches?.classList.remove('hidden');
      popularCategories?.classList.remove('hidden');
    }

    function hideSearchResults() {
      searchResults?.classList.add('hidden');
      aiRecommendations?.classList.add('hidden');
    }

    function applyFilters() {
      const category = (
        document.getElementById('filter-category') as HTMLSelectElement
      )?.value;
      const type = (document.getElementById('filter-type') as HTMLSelectElement)
        ?.value;
      const priceMin = (
        document.getElementById('filter-price-min') as HTMLInputElement
      )?.value;
      const priceMax = (
        document.getElementById('filter-price-max') as HTMLInputElement
      )?.value;

      const filters = {
        category: category || undefined,
        type: type || undefined,
        priceRange:
          priceMin || priceMax
            ? {
                min: priceMin ? parseFloat(priceMin) : 0,
                max: priceMax ? parseFloat(priceMax) : 10000,
              }
            : undefined,
      };

      currentFilters = filters;
      performSearch(filters);
    }

    function showLoadingState() {
      if (resultsList) {
        resultsList.innerHTML = `
          <div class="col-span-full text-center py-12">
            <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-soladia-primary mx-auto mb-4"></div>
            <p class="text-gray-600">AI is analyzing your search...</p>
          </div>
        `;
      }
    }

    function showErrorState() {
      if (resultsList) {
        resultsList.innerHTML = `
          <div class="col-span-full text-center py-12">
            <svg class="w-12 h-12 text-red-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Search failed</h3>
            <p class="text-gray-500">Please try again or use basic search</p>
          </div>
        `;
      }
    }

    // Global functions for trending and category searches
    (window as any).searchTrending = (term: string) => {
      (searchInput as HTMLInputElement).value = term;
      currentQuery = term;
      performSearch();
    };

    (window as any).searchCategory = (category: string) => {
      (searchInput as HTMLInputElement).value = '';
      currentQuery = '';
      performSearch({ category });
    };

    // Hide suggestions when clicking outside
    document.addEventListener('click', e => {
      if (
        !suggestionsContainer?.contains(e.target as Node) &&
        !searchInput?.contains(e.target as Node)
      ) {
        hideSuggestions();
      }
    });
  });
</script>

<style>
  .aspect-w-16 {
    position: relative;
    padding-bottom: 56.25%; /* 16:9 aspect ratio */
  }

  .aspect-w-16 > * {
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
  }

  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
</style>
